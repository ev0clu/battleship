(()=>{"use strict";var t={358:(t,n,e)=>{e.d(n,{Z:()=>s});var i=e(537),r=e.n(i),a=e(645),o=e.n(a)()(r());o.push([t.id,"/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n","",{version:3,sources:["webpack://./src/assets/reset.css"],names:[],mappings:"AAAA,sBAAsB;AACtB;;;CAGC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiFI,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,wBAAwB;AAC5B;AACA,gDAAgD;AAChD;;;;;;;;;;;IAWI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,gBAAgB;AACpB;AACA;;IAEI,YAAY;AAChB;AACA;;;;IAII,WAAW;IACX,aAAa;AACjB;AACA;IACI,yBAAyB;IACzB,iBAAiB;AACrB;AACA,sBAAsB",sourcesContent:["/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n"],sourceRoot:""}]);const s=o},774:(t,n,e)=>{e.d(n,{Z:()=>s});var i=e(537),r=e.n(i),a=e(645),o=e.n(a)()(r());o.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap);"]),o.push([t.id,":root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-color: #1c1917;\n    --button-color-hover: #44403c;\n    --target-cell-color: #34d399;\n    --button-start-inactive-color: #d6d3d1;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    align-items: flex-start;\n    gap: 4rem;\n}\n\n#init-board-container,\n#init-ship-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.ship-drag-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 19.4rem;\n    height: calc(18.5rem + 14px);\n    padding: 1rem;\n    gap: 1rem;\n    border: 2px solid black;\n    background-color: #e7e5e4;\n}\n\n.ship-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    position: relative;\n    left: -2px;\n    top: -2px;\n    z-index: 20;\n    border: 1px solid black;\n}\n\n.drag-container-horizontal {\n    flex-direction: column;\n}\n\n.drag-container-vertical {\n    flex-direction: row;\n}\n\n.ship-horizontal {\n    flex-direction: row;\n}\n\n.ship-vertical {\n    flex-direction: column;\n}\n\n.cell-ship {\n    border: 1px solid black;\n    cursor: move;\n    height: 2.5rem;\n    width: 2.5rem;\n    position: relative;\n    z-index: 20;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n    position: relative;\n    z-index: 1;\n}\n\n.cell-init-board {\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.target-cell {\n    border: 3px dashed var(--target-cell-color);\n}\n\n.cell-ship,\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n    position: relative;\n    z-index: 5;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n.start-inactive {\n    pointer-events: none;\n    background-color: var(--button-start-inactive-color);\n}\n\n.start-active {\n    pointer-events: auto;\n    background-color: var(--button-color);\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-color);\n    border-radius: 8px;\n}\n\n#btn-start {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n","",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap');\n\n:root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-color: #1c1917;\n    --button-color-hover: #44403c;\n    --target-cell-color: #34d399;\n    --button-start-inactive-color: #d6d3d1;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    align-items: flex-start;\n    gap: 4rem;\n}\n\n#init-board-container,\n#init-ship-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.ship-drag-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 19.4rem;\n    height: calc(18.5rem + 14px);\n    padding: 1rem;\n    gap: 1rem;\n    border: 2px solid black;\n    background-color: #e7e5e4;\n}\n\n.ship-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    position: relative;\n    left: -2px;\n    top: -2px;\n    z-index: 20;\n    border: 1px solid black;\n}\n\n.drag-container-horizontal {\n    flex-direction: column;\n}\n\n.drag-container-vertical {\n    flex-direction: row;\n}\n\n.ship-horizontal {\n    flex-direction: row;\n}\n\n.ship-vertical {\n    flex-direction: column;\n}\n\n.cell-ship {\n    border: 1px solid black;\n    cursor: move;\n    height: 2.5rem;\n    width: 2.5rem;\n    position: relative;\n    z-index: 20;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n    position: relative;\n    z-index: 1;\n}\n\n.cell-init-board {\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.target-cell {\n    border: 3px dashed var(--target-cell-color);\n}\n\n.cell-ship,\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n    position: relative;\n    z-index: 5;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n.start-inactive {\n    pointer-events: none;\n    background-color: var(--button-start-inactive-color);\n}\n\n.start-active {\n    pointer-events: auto;\n    background-color: var(--button-color);\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-color);\n    border-radius: 8px;\n}\n\n#btn-start {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n"],sourceRoot:""}]);const s=o},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",i=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),i&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),i&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,i,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(i)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(o[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);i&&o[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,i=0;i<n.length;i++)if(n[i].identifier===t){e=i;break}return e}function i(t,i){for(var a={},o=[],s=0;s<t.length;s++){var c=t[s],l=i.base?c[0]+i.base:c[0],d=a[l]||0,A="".concat(l," ").concat(d);a[l]=d+1;var u=e(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var h=r(p,i);i.byIndex=s,n.splice(s,0,{identifier:A,updater:h,references:1})}o.push(A)}return o}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var a=i(t=t||[],r=r||{});return function(t){t=t||[];for(var o=0;o<a.length;o++){var s=e(a[o]);n[s].references--}for(var c=i(t,r),l=0;l<a.length;l++){var d=e(a[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=c}}},569:t=>{var n={};t.exports=function(t,e){var i=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var i="";e.supports&&(i+="@supports (".concat(e.supports,") {")),e.media&&(i+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(i+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),i+=e.css,r&&(i+="}"),e.media&&(i+="}"),e.supports&&(i+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(i,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(i){var r=n[i];if(void 0!==r)return r.exports;var a=n[i]={id:i,exports:{}};return t[i](a,a.exports,e),a.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var i=n.getElementsByTagName("script");i.length&&(t=i[i.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.nc=void 0,(()=>{var t=e(379),n=e.n(t),i=e(795),r=e.n(i),a=e(569),o=e.n(a),s=e(565),c=e.n(s),l=e(216),d=e.n(l),A=e(589),u=e.n(A),p=e(358),h={};h.styleTagTransform=u(),h.setAttributes=c(),h.insert=o().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=d(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;var m=e(774),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=o().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),n()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const b=t=>{const n=t,e=[];return function(){for(let t=0;t<n;t++)e[t]=!1}(),{get length(){return n},get hitArray(){return e},hit:t=>{e[t]=!0},isSunk:()=>e.every((t=>!0===t))}},g=()=>{const t=[],n=10;!function(){for(let e=0;e<n;e++){t[e]=[];for(let i=0;i<n;i++){const n={isShip:!1,ship:{},shipIndex:null,isHit:!1,x:e,y:i,direction:""};t[e].push(n)}}}();const e=(e,i,r,a)=>{let o=!0;if("vertical"===r){const r=e-1,s=e+a.length;if(e>=0&&e<=n-a.length&&i>=0&&i<n){for(let n=0;n<a.length;n++)if(t[e+n][i].isShip){o=!1;break}if(r>=0&&s<n)if(t[r][i].isShip||t[s][i].isShip)o=!1;else for(let e=0;e<=a.length+1;e++){if(i-1>=0&&t[r+e][i-1].isShip){o=!1;break}if(i+1<n&&t[r+e][i+1].isShip){o=!1;break}}else if(-1===r)if(t[s][i].isShip)o=!1;else for(let e=0;e<a.length+1;e++){if(i-1>=0&&t[e][i-1].isShip){o=!1;break}if(i+1<n&&t[e][i+1].isShip){o=!1;break}}else if(s===n)if(t[r][i].isShip)o=!1;else for(let e=0;e<a.length+1;e++){if(i-1>=0&&t[r+e][i-1].isShip){o=!1;break}if(i+1<n&&t[r+e][i+1].isShip){o=!1;break}}}else o=!1}else if("horizontal"===r){const r=i-1,s=i+a.length;if(e>=0&&e<n&&i>=0&&i<=n-a.length){for(let n=0;n<a.length;n++)if(t[e][i+n].isShip){o=!1;break}if(r>=0&&s<n)if(t[e][r].isShip||t[e][s].isShip)o=!1;else for(let i=0;i<=a.length+1;i++){if(e-1>=0&&t[e-1][r+i].isShip){o=!1;break}if(e+1<n&&t[e+1][r+i].isShip){o=!1;break}}else if(-1===r)if(t[e][s].isShip)o=!1;else for(let i=0;i<a.length+1;i++){if(e-1>=0&&t[e-1][i].isShip){o=!1;break}if(e+1<n&&t[e+1][i].isShip){o=!1;break}}else if(s===n)if(t[e][r].isShip)o=!1;else for(let i=0;i<a.length+1;i++){if(e-1>=0&&t[e-1][r+i].isShip){o=!1;break}if(e+1<n&&t[e+1][r+i].isShip){o=!1;break}}}else o=!1}return o},i=(n,e,i)=>{for(let r=0;r<i.length;r++)t[n+r][e].isShip=!0,t[n+r][e].ship=i,t[n+r][e].shipIndex=r,t[n+r][e].direction="vertical"},r=(n,e,i)=>{for(let r=0;r<i.length;r++)t[n][e+r].isShip=!0,t[n][e+r].ship=i,t[n][e+r].shipIndex=r,t[n][e+r].direction="horizontal"};return{get board(){return t},resetBoard:()=>{for(let e=0;e<n;e++)for(let i=0;i<n;i++)t[e][i].isShip=!1,t[e][i].ship={},t[e][i].shipIndex=null,t[e][i].isHit=!1,t[e][i].direction=""},canPlaceShip:e,placeShipVertical:i,placeShipHorizontal:r,receiveAttack:(n,e)=>!0===t[n][e].isShip?(t[n][e].ship.hit(t[n][e].shipIndex),t[n][e].isHit=!0,!0):(t[n][e].isHit=!0,!1),setShipAreaToHit:(e,i)=>{const r=t[e][i].shipIndex,a=t[e][i].ship.length;if("vertical"===t[e][i].direction){const o=e-r-1,s=e+a-r;if(o>=0&&s<n){t[o][i].isHit=!0,t[s][i].isHit=!0;for(let e=0;e<=a+1;e++)i-1>=0&&(t[o+e][i-1].isHit=!0),i+1<n&&(t[o+e][i+1].isHit=!0)}if(o<0){t[s][i].isHit=!0;for(let e=0;e<a+1;e++)i-1>=0&&(t[e][i-1].isHit=!0),i+1<n&&(t[e][i+1].isHit=!0)}if(s>=n){t[o][i].isHit=!0;for(let e=0;e<a+1;e++)i-1>=0&&(t[o+e][i-1].isHit=!0),i+1<n&&(t[o+e][i+1].isHit=!0)}}if("horizontal"===t[e][i].direction){const o=i-r-1,s=i+a-r;if(o>=0&&s<n){t[e][o].isHit=!0,t[e][s].isHit=!0;for(let i=0;i<=a+1;i++)e-1>=0&&(t[e-1][o+i].isHit=!0),e+1<n&&(t[e+1][o+i].isHit=!0)}if(o<0){t[e][s].isHit=!0;for(let i=0;i<a+1;i++)e-1>=0&&(t[e-1][i].isHit=!0),e+1<n&&(t[e+1][i].isHit=!0)}if(s>=n){t[e][o].isHit=!0;for(let i=0;i<a+1;i++)e-1>=0&&(t[e-1][o+i].isHit=!0),e+1<n&&(t[e+1][o+i].isHit=!0)}}},isAllShipsSunk:()=>{const n=[];return t.forEach((t=>{t.forEach((t=>{t.isShip&&n.push(t.ship.isSunk())}))})),!n.some((t=>!1===t))},randomPlaceShip:t=>{const n=Math.random()<.5?"vertical":"horizontal";let a=!1;for(;!a;){const{x:o,y:s}={x:Math.floor(10*Math.random()),y:Math.floor(10*Math.random())};e(o,s,n,t)&&("vertical"===n?i(o,s,t):"horizontal"===n&&r(o,s,t),a=!0)}}}},v=()=>{let t=!0;return{get isMyTurn(){return t},changeTurn:()=>{t=!t},randomAttack:t=>{const n=[];t.board.forEach((t=>{t.forEach((t=>{t.isHit||n.push({x:t.x,y:t.y})}))}));const e=Math.floor(Math.random()*n.length);return n[e]}}},C=(()=>{const t=v(),n=v(),e=g(),i=g(),r=()=>{const t=[],n=b(5),e=b(4),i=b(3),r=b(3),a=b(2);return t.push(n,e,i,r,a),t};return{initGame:()=>{t.isMyTurn=!0,n.isMyTurn=!1},getGameBoard:t=>"player"===t?e.board:"computer"===t?i.board:void 0,resetGameboards:()=>{e.resetBoard(),i.resetBoard()},isPlayerTurn:()=>!!t.isMyTurn,changeTurn:()=>{t.changeTurn()},isCoordinateFree:(t,n,r)=>"player"===t?!e.board[n][r].isHit:"computer"===t?!i.board[n][r].isHit:void 0,isShipHit:(t,n,r)=>"player"===t?e.receiveAttack(n,r):"computer"===t?i.receiveAttack(n,r):void 0,isGameOver:()=>!(!e.isAllShipsSunk()&&!i.isAllShipsSunk()),computerRandomAttack:()=>n.randomAttack(e),generateShipRandomCoordinates:t=>{"player"===t&&r().forEach((t=>{e.randomPlaceShip(t)})),"computer"===t&&r().forEach((t=>{i.randomPlaceShip(t)}))},isShipSunk:(t,n,r)=>{if("player"===t){if(e.board[n][r].ship.isSunk())return e.setShipAreaToHit(n,r),!0}else if("computer"===t&&i.board[n][r].ship.isSunk())return i.setShipAreaToHit(n,r),!0},fillPlayerBoard:()=>{document.querySelectorAll(".cell-init-board").forEach((t=>{const n=Number(t.getAttribute("data-x")),i=Number(t.getAttribute("data-y"));if(t.childNodes.length>0){const r=Number(t.firstChild.getAttribute("data-width"));t.classList.contains("ship-active-vertical")?e.placeShipVertical(n,i,b(r)):t.classList.contains("ship-active-horizontal")&&e.placeShipHorizontal(n,i,b(r))}}))}}})(),y=e.p+"7615be16eed41f806def.png",B=(()=>{const t=(t,n)=>{const e=document.createElement("div");e.id=t;for(let i=0;i<n;i++)for(let r=0;r<n;r++){const n=document.createElement("div");n.setAttribute("class",`cell-${t}`),n.setAttribute("data-x",`${i}`),n.setAttribute("data-y",`${r}`),e.appendChild(n)}return e},n=(t,n)=>{const e=document.createElement("div");e.setAttribute("id",`${t}`),e.setAttribute("class","ship-container ship-horizontal"),e.setAttribute("draggable",!0),e.setAttribute("data-width",`${n}`);for(let t=0;t<n;t++){const t=document.createElement("div");t.setAttribute("class","cell-ship"),e.appendChild(t)}return e},e=()=>{const e=document.createElement("div");return e.classList.add("content-init"),e.append((()=>{const t=document.createElement("div");return t.id="init-ship-container",t.append((()=>{const t=document.createElement("div");return t.setAttribute("class","ship-drag-container drag-container-horizontal"),t.append(n("carrier",5),n("battleship",4),n("destroyer",3),n("submarine",3),n("patrol",2)),t})(),(()=>{const t=document.createElement("button");return t.id="btn-rotate",t.textContent="Rotate",t})()),t})(),(()=>{const n=document.createElement("div");return n.id="init-board-container",n.append(t("init-board",10),(()=>{const t=document.createElement("div");return t.id="button-container",t.append((()=>{const t=document.createElement("button");return t.id="btn-reset",t.textContent="Reset",t})(),(()=>{const t=document.createElement("button");return t.id="btn-random",t.textContent="Random",t})(),(()=>{const t=document.createElement("button");return t.id="btn-start",t.classList.add("start-inactive"),t.textContent="Start",t})()),t})()),n})()),e},i=()=>{const n=document.createElement("main");return n.append((()=>{const n=document.createElement("div");return n.classList.add("content-game"),n.append(t("player-board",10),(()=>{const t=document.createElement("div");return t.id="middle-container",t.append((()=>{const t=document.createElement("div");return t.id="winner-info",t})(),(()=>{const t=document.createElement("div");return t.id="turn-info",t.textContent="Your turn",t})(),(()=>{const t=document.createElement("button");return t.id="btn-restart",t.classList.add("btn-restart-inactive"),t.textContent="Restart",t})()),t})(),t("computer-board",10)),n})(),e()),n};return{createUI:()=>{document.querySelector("body").append((()=>{const t=document.createElement("header"),n=document.createElement("h1");return n.textContent="BATTLESHIP",t.appendChild(n),t})(),i(),(()=>{const t=document.createElement("footer");return t.append((()=>{const t=document.createElement("p"),n=(new Date).getFullYear();return t.textContent=`Copyright Â© Laszlo Kis ${n}`,t})(),(()=>{const t=document.createElement("a");t.classList.add("reflink"),t.href="https://github.com/ev0clu",t.target="_blank";const n=document.createElement("img");return n.classList.add("github-img"),n.src=y,n.alt="Github logo",t.appendChild(n),t})()),t})()),document.querySelector(".content-game").classList.add("inactive")},createShip:n,createBoard:t}})(),I=B,x=(()=>{const t=t=>{document.getElementById("winner-info").textContent=t},n=()=>{document.getElementById("computer-board").classList.toggle("board-inactive")},e=()=>{document.getElementById("btn-restart").classList.toggle("btn-restart-inactive")},i=t=>{const n=document.getElementById("turn-info");n.textContent="","player"===t?n.textContent="Your Turn":"computer"===t?n.textContent="Computer Turn":"over"===t&&(n.textContent="Game Over")},r=t=>{if("init"===t&&((()=>{const t=document.getElementById("init-board-container");t.removeChild(t.firstChild),t.insertBefore(I.createBoard("init-board",10),t.firstChild)})(),(()=>{const t=document.querySelector(".ship-drag-container");t.textContent="",t.classList.contains("drag-container-vertical")&&(t.classList.remove("drag-container-vertical"),t.classList.add("drag-container-horizontal")),t.append(I.createShip("carrier",5),I.createShip("battleship",4),I.createShip("destroyer",3),I.createShip("submarine",3),I.createShip("patrol",2))})()),"game"===t){const t=document.querySelectorAll(".cell-player-board"),n=document.querySelectorAll(".cell-computer-board");t.forEach((t=>{t.classList.contains("ship")&&t.classList.remove("ship"),t.classList.contains("hit")&&t.classList.remove("hit"),t.classList.contains("miss")&&t.classList.remove("miss")})),n.forEach((t=>{t.classList.contains("ship")&&t.classList.remove("ship"),t.classList.contains("hit")&&t.classList.remove("hit"),t.classList.contains("miss")&&t.classList.remove("miss")}))}},a=()=>0===document.querySelector(".ship-drag-container").childNodes.length,o=t=>{const n=document.getElementById("btn-start");"game"===t?n.setAttribute("class","start-inactive"):"init"===t&&(a()?(n.classList.remove("start-inactive"),n.classList.add("start-active")):(n.classList.remove("start-active"),n.classList.add("start-inactive")))};return{toggleUI:()=>{const t=document.querySelector(".content-game"),n=document.querySelector(".content-init");t.classList.toggle("inactive"),n.classList.toggle("inactive")},addShipToBoard:(t,n)=>{const e=document.querySelectorAll(".cell-player-board"),i=document.querySelectorAll(".cell-computer-board"),r=document.querySelectorAll(".cell-init-board");let a="";"player"===t?a=e:"computer"===t?a=i:"init"===t&&(a=r),n.forEach((t=>{t.forEach((t=>{if(t.isShip)for(let n=0;n<a.length;n++)if(Number(a[n].getAttribute("data-x"))===t.x&&Number(a[n].getAttribute("data-y"))===t.y){a[n].classList.add("ship");break}}))}))},changeTurnInformation:i,setGameoverUI:r=>{i("over"),t("player"===r?"You won!":"Computer won!"),e(),n()},clearBoard:r,setNewGameUI:()=>{e(),n(),o("game"),r("game"),i("player"),t("")},markShipAreaToHit:(t,n)=>{const e=document.querySelectorAll(".cell-player-board"),i=document.querySelectorAll(".cell-computer-board");let r="";"player"===t?r=e:"computer"===t&&(r=i),n.forEach((t=>{t.forEach((t=>{if(!t.isShip&&t.isHit)for(let n=0;n<r.length;n++)if(Number(r[n].getAttribute("data-x"))===t.x&&Number(r[n].getAttribute("data-y"))===t.y){r[n].classList.add("miss");break}}))}))},toggleShipDirection:()=>{const t=document.querySelector(".ship-drag-container");if(t.classList.contains("drag-container-horizontal")){t.classList.remove("drag-container-horizontal"),t.classList.add("drag-container-vertical");for(let n=0;n<t.childNodes.length;n++)t.children[n].classList.remove("ship-horizontal"),t.children[n].classList.add("ship-vertical")}else if(t.classList.contains("drag-container-vertical")){t.classList.remove("drag-container-vertical"),t.classList.add("drag-container-horizontal");for(let n=0;n<t.childNodes.length;n++)t.children[n].classList.remove("ship-vertical"),t.children[n].classList.add("ship-horizontal")}},setShipLocationActive:(t,n)=>{const e=Number(t.getAttribute("data-x")),i=Number(t.getAttribute("data-y")),r=Number(n.getAttribute("data-width"));if(n.classList.contains("ship-vertical"))for(let t=0;t<r;t++)document.querySelector(`.cell-init-board[data-x="${e+t}"][data-y="${i}"]`).classList.add("ship-active-vertical");else if(n.classList.contains("ship-horizontal"))for(let t=0;t<r;t++)document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i+t}"]`).classList.add("ship-active-horizontal")},removeShipLocationActive:(t,n)=>{const e=Number(t.getAttribute("data-x")),i=Number(t.getAttribute("data-y")),r=Number(n.getAttribute("data-width"));if(t.classList.contains("ship-active-vertical"))for(let t=0;t<r;t++)document.querySelector(`.cell-init-board[data-x="${e+t}"][data-y="${i}"]`).classList.remove("ship-active-vertical");else if(t.classList.contains("ship-active-horizontal"))for(let t=0;t<r;t++)document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i+t}"]`).classList.remove("ship-active-horizontal")},canDropShip:(t,n)=>{const e=Number(t.getAttribute("data-x")),i=Number(t.getAttribute("data-y")),r=Number(n.getAttribute("data-width"));let a="";const o=10;n.classList.contains("ship-horizontal")?a="horizontal":n.classList.contains("ship-vertical")&&(a="vertical");let s=!0;if("vertical"===a){const t=e-1,n=e+r;if(e>=0&&e<=o-r&&i>=0&&i<o){for(let t=0;t<r;t++){const n=document.querySelector(`.cell-init-board[data-x="${e+t}"][data-y="${i}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal")){s=!1;break}}if(t>=0&&n<o){const e=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i}"]`),a=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i}"]`);if(e.classList.contains("ship-active-vertical")||a.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")||a.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<=r+1;n++){if(i-1>=0){const e=document.querySelector(`.cell-init-board[data-x="${t+n}"][data-y="${i-1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<o){const e=document.querySelector(`.cell-init-board[data-x="${t+n}"][data-y="${i+1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(-1===t){const t=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal"))s=!1;else for(let t=0;t<r+1;t++){if(i-1>=0){const n=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i-1}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<o){const n=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i+1}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(n===o){const n=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<r+1;n++){if(i-1>=0){const e=document.querySelector(`.cell-init-board[data-x="${t+n}"][data-y="${i-1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<o){const e=document.querySelector(`.cell-init-board[data-x="${t+n}"][data-y="${i+1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}}}}else s=!1}else if("horizontal"===a){const t=i-1,n=i+r;if(e>=0&&e<o&&i>=0&&i<=o-r){for(let t=0;t<r;t++){const n=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i+t}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal")){s=!1;break}}if(t>=0&&n<o){const i=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${t}"]`),a=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${n}"]`);if(i.classList.contains("ship-active-vertical")||a.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")||a.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<=r+1;n++){if(e-1>=0){const i=document.querySelector(`.cell-init-board[data-x="${e-1}"][data-y="${t+n}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}if(e+1<o){const i=document.querySelector(`.cell-init-board[data-x="${e+1}"][data-y="${t+n}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(-1===t){const t=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${n}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal"))s=!1;else for(let t=0;t<r+1;t++){if(e-1>=0){const n=document.querySelector(`.cell-init-board[data-x="${e-1}"][data-y="${t}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal")){s=!1;break}}if(e+1<o){const n=document.querySelector(`.cell-init-board[data-x="${e+1}"][data-y="${t}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(n===o){const n=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${t}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<r+1;n++){if(e-1>=0){const i=document.querySelector(`.cell-init-board[data-x="${e-1}"][data-y="${t+n}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}if(e+1<o){const i=document.querySelector(`.cell-init-board[data-x="${e+1}"][data-y="${t+n}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}}}}else s=!1}return s},isAllShipDropped:a,emptyShipDragContainer:()=>{document.querySelector(".ship-drag-container").textContent=""},toggleStartButtonStatus:o}})(),S=(()=>{let t=null,n=!1;function e(n){this.style.opacity="0.4",this.parentNode.classList.contains("ship-drag-container")||x.removeShipLocationActive(this.parentNode,this),t=this,n.dataTransfer.effectAllowed="move",n.dataTransfer.setData("text/plain",this.id)}function i(){this.style.opacity="1"}function r(t){return t.preventDefault(),!1}function a(){this.classList.add("target-cell")}function o(){this.classList.remove("target-cell")}function s(e){if(e.stopPropagation(),t!==this){this.classList.remove("target-cell");const t=e.dataTransfer.getData("text/plain"),i=document.getElementById(`${t}`);x.canDropShip(this,i)&&(this.appendChild(i),x.setShipLocationActive(this,i)),x.isAllShipDropped()&&x.toggleStartButtonStatus("init"),n=!0}return!1}return{handleDragDropEventListener:()=>{document.querySelectorAll(".ship-container").forEach((t=>{t.addEventListener("dragstart",e),t.addEventListener("dragend",i)})),document.querySelectorAll(".cell-init-board").forEach((t=>{t.addEventListener("dragover",r),t.addEventListener("dragenter",a),t.addEventListener("dragleave",o),t.addEventListener("drop",s)}))},isDragDrop:function(){return!!n}}})(),E=S;(()=>{const t=()=>{const n=document.querySelectorAll(".cell-player-board"),e=C.computerRandomAttack();n.forEach((n=>{Number(n.getAttribute("data-x"))===e.x&&Number(n.getAttribute("data-y"))===e.y&&C.isCoordinateFree("player",e.x,e.y)&&(C.isShipHit("player",e.x,e.y)?(n.classList.add("hit"),C.isShipSunk("player",e.x,e.y)&&x.markShipAreaToHit("player",C.getGameBoard("player")),C.isGameOver()?x.setGameoverUI("computer"):t()):(n.classList.add("miss"),C.changeTurn(),x.changeTurnInformation("player")))}))};return{renderDOM:()=>{I.createUI(),document.getElementById("btn-rotate").addEventListener("click",(()=>{x.toggleShipDirection()})),document.getElementById("btn-reset").addEventListener("click",(()=>{x.clearBoard("init"),x.toggleStartButtonStatus("init"),C.resetGameboards(),E.handleDragDropEventListener()})),document.getElementById("btn-random").addEventListener("click",(()=>{x.clearBoard("init"),x.emptyShipDragContainer(),x.toggleStartButtonStatus("init"),C.resetGameboards(),C.generateShipRandomCoordinates("player"),x.addShipToBoard("init",C.getGameBoard("player"))})),document.getElementById("btn-start").addEventListener("click",(()=>{C.generateShipRandomCoordinates("computer"),E.isDragDrop()&&(C.fillPlayerBoard(),console.log(C.getGameBoard("player"))),x.addShipToBoard("player",C.getGameBoard("player")),x.addShipToBoard("computer",C.getGameBoard("computer")),x.toggleUI(),x.clearBoard("init")})),document.getElementById("btn-restart").addEventListener("click",(()=>{x.setNewGameUI(),x.toggleUI(),C.resetGameboards(),C.isPlayerTurn()||C.changeTurn(),E.handleDragDropEventListener()})),document.querySelectorAll(".cell-computer-board").forEach((n=>{n.addEventListener("click",(n=>{if(C.isPlayerTurn()){const e=Number(n.target.getAttribute("data-x")),i=Number(n.target.getAttribute("data-y"));C.isCoordinateFree("computer",e,i)&&(C.isShipHit("computer",e,i)?(n.target.classList.add("hit"),C.isShipSunk("computer",e,i)&&x.markShipAreaToHit("computer",C.getGameBoard("computer")),C.isGameOver()&&x.setGameoverUI("player")):(n.target.classList.add("miss"),C.changeTurn(),x.changeTurnInformation("computer"),new Promise((t=>{setTimeout(t,500)})).then((()=>{t()}))))}}))})),E.handleDragDropEventListener()}}})().renderDOM()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,