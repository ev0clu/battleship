(()=>{"use strict";var n={358:(n,t,e)=>{e.d(t,{Z:()=>s});var i=e(537),r=e.n(i),o=e(645),a=e.n(o)()(r());a.push([n.id,"/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n","",{version:3,sources:["webpack://./src/assets/reset.css"],names:[],mappings:"AAAA,sBAAsB;AACtB;;;CAGC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiFI,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,wBAAwB;AAC5B;AACA,gDAAgD;AAChD;;;;;;;;;;;IAWI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,gBAAgB;AACpB;AACA;;IAEI,YAAY;AAChB;AACA;;;;IAII,WAAW;IACX,aAAa;AACjB;AACA;IACI,yBAAyB;IACzB,iBAAiB;AACrB;AACA,sBAAsB",sourcesContent:["/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n"],sourceRoot:""}]);const s=a},774:(n,t,e)=>{e.d(t,{Z:()=>s});var i=e(537),r=e.n(i),o=e(645),a=e.n(o)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap);"]),a.push([n.id,":root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-color: #1c1917;\n    --button-color-hover: #44403c;\n    --target-cell-color: #34d399;\n    --button-start-inactive-color: #d6d3d1;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    align-items: flex-start;\n    gap: 4rem;\n}\n\n#init-board-container,\n#init-ship-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.ship-drag-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 19.4rem;\n    height: calc(18.5rem + 14px);\n    padding: 1rem;\n    gap: 1rem;\n    border: 2px solid black;\n    background-color: #e7e5e4;\n}\n\n.ship-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    position: relative;\n    left: -2px;\n    top: -2px;\n    z-index: 20;\n    border: 1px solid black;\n}\n\n.drag-container-horizontal {\n    flex-direction: column;\n}\n\n.drag-container-vertical {\n    flex-direction: row;\n}\n\n.ship-horizontal {\n    flex-direction: row;\n}\n\n.ship-vertical {\n    flex-direction: column;\n}\n\n.cell-ship {\n    border: 1px solid black;\n    cursor: move;\n    height: 2.5rem;\n    width: 2.5rem;\n    position: relative;\n    z-index: 20;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n    position: relative;\n    z-index: 1;\n}\n\n.cell-init-board {\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.target-cell {\n    border: 3px dashed var(--target-cell-color);\n}\n\n.cell-ship,\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n    position: relative;\n    z-index: 5;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n.start-inactive {\n    pointer-events: none;\n    background-color: var(--button-start-inactive-color);\n}\n\n.start-active {\n    pointer-events: auto;\n    background-color: var(--button-color);\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-color);\n    border-radius: 8px;\n}\n\n#btn-start {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n","",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap');\n\n:root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-color: #1c1917;\n    --button-color-hover: #44403c;\n    --target-cell-color: #34d399;\n    --button-start-inactive-color: #d6d3d1;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    align-items: flex-start;\n    gap: 4rem;\n}\n\n#init-board-container,\n#init-ship-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.ship-drag-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 19.4rem;\n    height: calc(18.5rem + 14px);\n    padding: 1rem;\n    gap: 1rem;\n    border: 2px solid black;\n    background-color: #e7e5e4;\n}\n\n.ship-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    position: relative;\n    left: -2px;\n    top: -2px;\n    z-index: 20;\n    border: 1px solid black;\n}\n\n.drag-container-horizontal {\n    flex-direction: column;\n}\n\n.drag-container-vertical {\n    flex-direction: row;\n}\n\n.ship-horizontal {\n    flex-direction: row;\n}\n\n.ship-vertical {\n    flex-direction: column;\n}\n\n.cell-ship {\n    border: 1px solid black;\n    cursor: move;\n    height: 2.5rem;\n    width: 2.5rem;\n    position: relative;\n    z-index: 20;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n    position: relative;\n    z-index: 1;\n}\n\n.cell-init-board {\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.target-cell {\n    border: 3px dashed var(--target-cell-color);\n}\n\n.cell-ship,\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n    position: relative;\n    z-index: 5;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n.start-inactive {\n    pointer-events: none;\n    background-color: var(--button-start-inactive-color);\n}\n\n.start-active {\n    pointer-events: auto;\n    background-color: var(--button-color);\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-color);\n    border-radius: 8px;\n}\n\n#btn-start {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",i=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),i&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),i&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,i,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);i&&a[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),t.push(A))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(r," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,i=0;i<t.length;i++)if(t[i].identifier===n){e=i;break}return e}function i(n,i){for(var o={},a=[],s=0;s<n.length;s++){var c=n[s],l=i.base?c[0]+i.base:c[0],A=o[l]||0,d="".concat(l," ").concat(A);o[l]=A+1;var u=e(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,i);i.byIndex=s,t.splice(s,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var o=i(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var s=e(o[a]);t[s].references--}for(var c=i(n,r),l=0;l<o.length;l++){var A=e(o[l]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}o=c}}},569:n=>{var t={};n.exports=function(n,e){var i=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var i="";e.supports&&(i+="@supports (".concat(e.supports,") {")),e.media&&(i+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(i+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),i+=e.css,r&&(i+="}"),e.media&&(i+="}"),e.supports&&(i+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(i,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(i){var r=t[i];if(void 0!==r)return r.exports;var o=t[i]={id:i,exports:{}};return n[i](o,o.exports,e),o.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var i in t)e.o(t,i)&&!e.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:t[i]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var i=t.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),i=e(795),r=e.n(i),o=e(569),a=e.n(o),s=e(565),c=e.n(s),l=e(216),A=e.n(l),d=e(589),u=e.n(d),p=e(358),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var h=e(774),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=A(),t()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;const b=n=>{const t=n,e=[];return function(){for(let n=0;n<t;n++)e[n]=!1}(),{get length(){return t},get hitArray(){return e},hit:n=>{e[n]=!0},isSunk:()=>e.every((n=>!0===n))}},g=()=>{const n=[],t=10;!function(){for(let e=0;e<t;e++){n[e]=[];for(let i=0;i<t;i++){const t={isShip:!1,ship:{},shipIndex:null,isHit:!1,x:e,y:i,direction:""};n[e].push(t)}}}();const e=(e,i,r,o)=>{let a=!0;if("vertical"===r){const r=e-1,s=e+o.length;if(e>=0&&e<=t-o.length&&i>=0&&i<t){for(let t=0;t<o.length;t++)if(n[e+t][i].isShip){a=!1;break}if(r>=0&&s<t)if(n[r][i].isShip||n[s][i].isShip)a=!1;else for(let e=0;e<=o.length+1;e++){if(i-1>=0&&n[r+e][i-1].isShip){a=!1;break}if(i+1<t&&n[r+e][i+1].isShip){a=!1;break}}else if(-1===r)if(n[s][i].isShip)a=!1;else for(let e=0;e<o.length+1;e++){if(i-1>=0&&n[e][i-1].isShip){a=!1;break}if(i+1<t&&n[e][i+1].isShip){a=!1;break}}else if(s===t)if(n[r][i].isShip)a=!1;else for(let e=0;e<o.length+1;e++){if(i-1>=0&&n[r+e][i-1].isShip){a=!1;break}if(i+1<t&&n[r+e][i+1].isShip){a=!1;break}}}else a=!1}else if("horizontal"===r){const r=i-1,s=i+o.length;if(e>=0&&e<t&&i>=0&&i<=t-o.length){for(let t=0;t<o.length;t++)if(n[e][i+t].isShip){a=!1;break}if(r>=0&&s<t)if(n[e][r].isShip||n[e][s].isShip)a=!1;else for(let i=0;i<=o.length+1;i++){if(e-1>=0&&n[e-1][r+i].isShip){a=!1;break}if(e+1<t&&n[e+1][r+i].isShip){a=!1;break}}else if(-1===r)if(n[e][s].isShip)a=!1;else for(let i=0;i<o.length+1;i++){if(e-1>=0&&n[e-1][i].isShip){a=!1;break}if(e+1<t&&n[e+1][i].isShip){a=!1;break}}else if(s===t)if(n[e][r].isShip)a=!1;else for(let i=0;i<o.length+1;i++){if(e-1>=0&&n[e-1][r+i].isShip){a=!1;break}if(e+1<t&&n[e+1][r+i].isShip){a=!1;break}}}else a=!1}return a},i=(t,e,i)=>{for(let r=0;r<i.length;r++)n[t+r][e].isShip=!0,n[t+r][e].ship=i,n[t+r][e].shipIndex=r,n[t+r][e].direction="vertical"},r=(t,e,i)=>{for(let r=0;r<i.length;r++)n[t][e+r].isShip=!0,n[t][e+r].ship=i,n[t][e+r].shipIndex=r,n[t][e+r].direction="horizontal"};return{get board(){return n},resetBoard:()=>{for(let e=0;e<t;e++)for(let i=0;i<t;i++)n[e][i].isShip=!1,n[e][i].ship={},n[e][i].shipIndex=null,n[e][i].isHit=!1,n[e][i].direction=""},canPlaceShip:e,placeShipVertical:i,placeShipHorizontal:r,receiveAttack:(t,e)=>!0===n[t][e].isShip?(n[t][e].ship.hit(n[t][e].shipIndex),n[t][e].isHit=!0,!0):(n[t][e].isHit=!0,!1),setShipAreaToHit:(e,i)=>{const r=n[e][i].shipIndex,o=n[e][i].ship.length;if("vertical"===n[e][i].direction){const a=e-r-1,s=e+o-r;if(a>=0&&s<t){n[a][i].isHit=!0,n[s][i].isHit=!0;for(let e=0;e<=o+1;e++)i-1>=0&&(n[a+e][i-1].isHit=!0),i+1<t&&(n[a+e][i+1].isHit=!0)}if(a<0){n[s][i].isHit=!0;for(let e=0;e<o+1;e++)i-1>=0&&(n[e][i-1].isHit=!0),i+1<t&&(n[e][i+1].isHit=!0)}if(s>=t){n[a][i].isHit=!0;for(let e=0;e<o+1;e++)i-1>=0&&(n[a+e][i-1].isHit=!0),i+1<t&&(n[a+e][i+1].isHit=!0)}}if("horizontal"===n[e][i].direction){const a=i-r-1,s=i+o-r;if(a>=0&&s<t){n[e][a].isHit=!0,n[e][s].isHit=!0;for(let i=0;i<=o+1;i++)e-1>=0&&(n[e-1][a+i].isHit=!0),e+1<t&&(n[e+1][a+i].isHit=!0)}if(a<0){n[e][s].isHit=!0;for(let i=0;i<o+1;i++)e-1>=0&&(n[e-1][i].isHit=!0),e+1<t&&(n[e+1][i].isHit=!0)}if(s>=t){n[e][a].isHit=!0;for(let i=0;i<o+1;i++)e-1>=0&&(n[e-1][a+i].isHit=!0),e+1<t&&(n[e+1][a+i].isHit=!0)}}},isAllShipsSunk:()=>{const t=[];return n.forEach((n=>{n.forEach((n=>{n.isShip&&t.push(n.ship.isSunk())}))})),!t.some((n=>!1===n))},randomPlaceShip:n=>{const t=Math.random()<.5?"vertical":"horizontal";let o=!1;for(;!o;){const{x:a,y:s}={x:Math.floor(10*Math.random()),y:Math.floor(10*Math.random())};e(a,s,t,n)&&("vertical"===t?i(a,s,n):"horizontal"===t&&r(a,s,n),o=!0)}}}},v=()=>{let n=!0;return{get isMyTurn(){return n},changeTurn:()=>{n=!n},randomAttack:n=>{const t=[];n.board.forEach((n=>{n.forEach((n=>{n.isHit||t.push({x:n.x,y:n.y})}))}));const e=Math.floor(Math.random()*t.length);return t[e]}}},C=(()=>{const n=v(),t=v(),e=g(),i=g(),r=()=>{const n=[],t=b(5),e=b(4),i=b(3),r=b(3),o=b(2);return n.push(t,e,i,r,o),n};return{initGame:()=>{n.isMyTurn=!0,t.isMyTurn=!1},getGameBoard:n=>"player"===n?e.board:"computer"===n?i.board:void 0,resetGameboards:()=>{e.resetBoard(),i.resetBoard()},isPlayerTurn:()=>!!n.isMyTurn,changeTurn:()=>{n.changeTurn()},isCoordinateFree:(n,t,r)=>"player"===n?!e.board[t][r].isHit:"computer"===n?!i.board[t][r].isHit:void 0,isShipHit:(n,t,r)=>"player"===n?e.receiveAttack(t,r):"computer"===n?i.receiveAttack(t,r):void 0,isGameOver:()=>!(!e.isAllShipsSunk()&&!i.isAllShipsSunk()),computerRandomAttack:()=>t.randomAttack(e),generateShipRandomCoordinates:n=>{"player"===n&&r().forEach((n=>{e.randomPlaceShip(n)})),"computer"===n&&r().forEach((n=>{i.randomPlaceShip(n)}))},isShipSunk:(n,t,r)=>{if("player"===n){if(e.board[t][r].ship.isSunk())return e.setShipAreaToHit(t,r),!0}else if("computer"===n&&i.board[t][r].ship.isSunk())return i.setShipAreaToHit(t,r),!0}}})(),y=e.p+"7615be16eed41f806def.png",B=(()=>{const n=(n,t)=>{const e=document.createElement("div");e.id=n;for(let i=0;i<t;i++)for(let r=0;r<t;r++){const t=document.createElement("div");t.setAttribute("class",`cell-${n}`),t.setAttribute("data-x",`${i}`),t.setAttribute("data-y",`${r}`),e.appendChild(t)}return e},t=(n,t)=>{const e=document.createElement("div");e.setAttribute("id",`${n}`),e.setAttribute("class","ship-container ship-horizontal"),e.setAttribute("draggable",!0),e.setAttribute("data-width",`${t}`);for(let n=0;n<t;n++){const n=document.createElement("div");n.setAttribute("class","cell-ship"),e.appendChild(n)}return e},e=()=>{const e=document.createElement("div");return e.classList.add("content-init"),e.append((()=>{const n=document.createElement("div");return n.id="init-ship-container",n.append((()=>{const n=document.createElement("div");return n.setAttribute("class","ship-drag-container drag-container-horizontal"),n.append(t("carrier",5),t("battleship",4),t("destroyer",3),t("submarine",3),t("patrol",2)),n})(),(()=>{const n=document.createElement("button");return n.id="btn-rotate",n.textContent="Rotate",n})()),n})(),(()=>{const t=document.createElement("div");return t.id="init-board-container",t.append(n("init-board",10),(()=>{const n=document.createElement("div");return n.id="button-container",n.append((()=>{const n=document.createElement("button");return n.id="btn-reset",n.textContent="Reset",n})(),(()=>{const n=document.createElement("button");return n.id="btn-random",n.textContent="Random",n})(),(()=>{const n=document.createElement("button");return n.id="btn-start",n.classList.add("start-inactive"),n.textContent="Start",n})()),n})()),t})()),e},i=()=>{const t=document.createElement("main");return t.append((()=>{const t=document.createElement("div");return t.classList.add("content-game"),t.append(n("player-board",10),(()=>{const n=document.createElement("div");return n.id="middle-container",n.append((()=>{const n=document.createElement("div");return n.id="winner-info",n})(),(()=>{const n=document.createElement("div");return n.id="turn-info",n.textContent="Your turn",n})(),(()=>{const n=document.createElement("button");return n.id="btn-restart",n.classList.add("btn-restart-inactive"),n.textContent="Restart",n})()),n})(),n("computer-board",10)),t})(),e()),t};return{createUI:()=>{document.querySelector("body").append((()=>{const n=document.createElement("header"),t=document.createElement("h1");return t.textContent="BATTLESHIP",n.appendChild(t),n})(),i(),(()=>{const n=document.createElement("footer");return n.append((()=>{const n=document.createElement("p"),t=(new Date).getFullYear();return n.textContent=`Copyright Â© Laszlo Kis ${t}`,n})(),(()=>{const n=document.createElement("a");n.classList.add("reflink"),n.href="https://github.com/ev0clu",n.target="_blank";const t=document.createElement("img");return t.classList.add("github-img"),t.src=y,t.alt="Github logo",n.appendChild(t),n})()),n})()),document.querySelector(".content-game").classList.add("inactive")},createShip:t,createBoard:n}})(),I=B,x=(()=>{const n=n=>{document.getElementById("winner-info").textContent=n},t=()=>{document.getElementById("computer-board").classList.toggle("board-inactive")},e=()=>{document.getElementById("btn-restart").classList.toggle("btn-restart-inactive")},i=n=>{const t=document.getElementById("turn-info");t.textContent="","player"===n?t.textContent="Your Turn":"computer"===n?t.textContent="Computer Turn":"over"===n&&(t.textContent="Game Over")},r=n=>{if("init"===n&&((()=>{const n=document.getElementById("init-board-container");n.removeChild(n.firstChild),n.insertBefore(I.createBoard("init-board",10),n.firstChild)})(),(()=>{const n=document.querySelector(".ship-drag-container");n.textContent="",n.classList.contains("drag-container-vertical")&&(n.classList.remove("drag-container-vertical"),n.classList.add("drag-container-horizontal")),n.append(I.createShip("carrier",5),I.createShip("battleship",4),I.createShip("destroyer",3),I.createShip("submarine",3),I.createShip("patrol",2))})()),"game"===n){const n=document.querySelectorAll(".cell-player-board"),t=document.querySelectorAll(".cell-computer-board");n.forEach((n=>{n.classList.contains("ship")&&n.classList.remove("ship"),n.classList.contains("hit")&&n.classList.remove("hit"),n.classList.contains("miss")&&n.classList.remove("miss")})),t.forEach((n=>{n.classList.contains("ship")&&n.classList.remove("ship"),n.classList.contains("hit")&&n.classList.remove("hit"),n.classList.contains("miss")&&n.classList.remove("miss")}))}},o=()=>0===document.querySelector(".ship-drag-container").childNodes.length,a=n=>{const t=document.getElementById("btn-start");"game"===n?t.setAttribute("class","start-inactive"):"init"===n&&(o()?(t.classList.remove("start-inactive"),t.classList.add("start-active")):(t.classList.remove("start-active"),t.classList.add("start-inactive")))};return{toggleUI:()=>{const n=document.querySelector(".content-game"),t=document.querySelector(".content-init");n.classList.toggle("inactive"),t.classList.toggle("inactive")},addShipToBoard:(n,t)=>{const e=document.querySelectorAll(".cell-player-board"),i=document.querySelectorAll(".cell-computer-board"),r=document.querySelectorAll(".cell-init-board");let o="";"player"===n?o=e:"computer"===n?o=i:"init"===n&&(o=r),t.forEach((n=>{n.forEach((n=>{if(n.isShip)for(let t=0;t<o.length;t++)if(Number(o[t].getAttribute("data-x"))===n.x&&Number(o[t].getAttribute("data-y"))===n.y){o[t].classList.add("ship");break}}))}))},changeTurnInformation:i,setGameoverUI:r=>{i("over"),n("player"===r?"You won!":"Computer won!"),e(),t()},clearBoard:r,setNewGameUI:()=>{e(),t(),a("game"),r("game"),i("player"),n("")},markShipAreaToHit:(n,t)=>{const e=document.querySelectorAll(".cell-player-board"),i=document.querySelectorAll(".cell-computer-board");let r="";"player"===n?r=e:"computer"===n&&(r=i),t.forEach((n=>{n.forEach((n=>{if(!n.isShip&&n.isHit)for(let t=0;t<r.length;t++)if(Number(r[t].getAttribute("data-x"))===n.x&&Number(r[t].getAttribute("data-y"))===n.y){r[t].classList.add("miss");break}}))}))},toggleShipDirection:()=>{const n=document.querySelector(".ship-drag-container");if(n.classList.contains("drag-container-horizontal")){n.classList.remove("drag-container-horizontal"),n.classList.add("drag-container-vertical");for(let t=0;t<n.childNodes.length;t++)n.children[t].classList.remove("ship-horizontal"),n.children[t].classList.add("ship-vertical")}else if(n.classList.contains("drag-container-vertical")){n.classList.remove("drag-container-vertical"),n.classList.add("drag-container-horizontal");for(let t=0;t<n.childNodes.length;t++)n.children[t].classList.remove("ship-vertical"),n.children[t].classList.add("ship-horizontal")}},setShipLocationActive:(n,t)=>{const e=Number(n.getAttribute("data-x")),i=Number(n.getAttribute("data-y")),r=Number(t.getAttribute("data-width"));if(t.classList.contains("ship-vertical"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${e+n}"][data-y="${i}"]`).classList.add("ship-active-vertical");else if(t.classList.contains("ship-horizontal"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i+n}"]`).classList.add("ship-active-horizontal")},removeShipLocationActive:(n,t)=>{const e=Number(n.getAttribute("data-x")),i=Number(n.getAttribute("data-y")),r=Number(t.getAttribute("data-width"));if(n.classList.contains("ship-active-vertical"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${e+n}"][data-y="${i}"]`).classList.remove("ship-active-vertical");else if(n.classList.contains("ship-active-horizontal"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i+n}"]`).classList.remove("ship-active-horizontal")},canDropShip:(n,t)=>{const e=Number(n.getAttribute("data-x")),i=Number(n.getAttribute("data-y")),r=Number(t.getAttribute("data-width"));let o="";const a=10;t.classList.contains("ship-horizontal")?o="horizontal":t.classList.contains("ship-vertical")&&(o="vertical");let s=!0;if("vertical"===o){const n=e-1,t=e+r;if(e>=0&&e<=a-r&&i>=0&&i<a){for(let n=0;n<r;n++){const t=document.querySelector(`.cell-init-board[data-x="${e+n}"][data-y="${i}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}if(n>=0&&t<a){const e=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i}"]`),o=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i}"]`);if(e.classList.contains("ship-active-vertical")||o.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")||o.classList.contains("ship-active-horizontal"))s=!1;else for(let t=0;t<=r+1;t++){if(i-1>=0){const e=document.querySelector(`.cell-init-board[data-x="${n+t}"][data-y="${i-1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<a){const e=document.querySelector(`.cell-init-board[data-x="${n+t}"][data-y="${i+1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(-1===n){const n=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<r+1;n++){if(i-1>=0){const t=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i-1}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<a){const t=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i+1}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(t===a){const t=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal"))s=!1;else for(let t=0;t<r+1;t++){if(i-1>=0){const e=document.querySelector(`.cell-init-board[data-x="${n+t}"][data-y="${i-1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<a){const e=document.querySelector(`.cell-init-board[data-x="${n+t}"][data-y="${i+1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}}}}else s=!1}else if("horizontal"===o){const n=i-1,t=i+r;if(e>=0&&e<a&&i>=0&&i<=a-r){for(let n=0;n<r;n++){const t=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i+n}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}if(n>=0&&t<a){const i=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${n}"]`),o=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${t}"]`);if(i.classList.contains("ship-active-vertical")||o.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")||o.classList.contains("ship-active-horizontal"))s=!1;else for(let t=0;t<=r+1;t++){if(e-1>=0){const i=document.querySelector(`.cell-init-board[data-x="${e-1}"][data-y="${n+t}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}if(e+1<a){const i=document.querySelector(`.cell-init-board[data-x="${e+1}"][data-y="${n+t}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(-1===n){const n=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${t}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<r+1;n++){if(e-1>=0){const t=document.querySelector(`.cell-init-board[data-x="${e-1}"][data-y="${n}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}if(e+1<a){const t=document.querySelector(`.cell-init-board[data-x="${e+1}"][data-y="${n}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(t===a){const t=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${n}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal"))s=!1;else for(let t=0;t<r+1;t++){if(e-1>=0){const i=document.querySelector(`.cell-init-board[data-x="${e-1}"][data-y="${n+t}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}if(e+1<a){const i=document.querySelector(`.cell-init-board[data-x="${e+1}"][data-y="${n+t}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}}}}else s=!1}return s},isAllShipDropped:o,emptyShipDragContainer:()=>{document.querySelector(".ship-drag-container").textContent=""},toggleStartButtonStatus:a}})(),S=(()=>{let n=null;function t(t){this.style.opacity="0.4",this.parentNode.classList.contains("ship-drag-container")||x.removeShipLocationActive(this.parentNode,this),n=this,t.dataTransfer.effectAllowed="move",t.dataTransfer.setData("text/plain",this.id)}function e(){this.style.opacity="1"}function i(n){return n.preventDefault(),!1}function r(){this.classList.add("target-cell")}function o(){this.classList.remove("target-cell")}function a(t){if(t.stopPropagation(),n!==this){this.classList.remove("target-cell");const n=t.dataTransfer.getData("text/plain"),e=document.getElementById(`${n}`);x.canDropShip(this,e)&&(this.appendChild(e),x.setShipLocationActive(this,e)),x.isAllShipDropped()&&x.toggleStartButtonStatus("init")}return!1}return{handleDragDropEventListener:()=>{document.querySelectorAll(".ship-container").forEach((n=>{n.addEventListener("dragstart",t),n.addEventListener("dragend",e)})),document.querySelectorAll(".cell-init-board").forEach((n=>{n.addEventListener("dragover",i),n.addEventListener("dragenter",r),n.addEventListener("dragleave",o),n.addEventListener("drop",a)}))}}})(),E=S;(()=>{const n=()=>{const t=document.querySelectorAll(".cell-player-board"),e=C.computerRandomAttack();t.forEach((t=>{Number(t.getAttribute("data-x"))===e.x&&Number(t.getAttribute("data-y"))===e.y&&C.isCoordinateFree("player",e.x,e.y)&&(C.isShipHit("player",e.x,e.y)?(t.classList.add("hit"),C.isShipSunk("player",e.x,e.y)&&x.markShipAreaToHit("player",C.getGameBoard("player")),C.isGameOver()&&x.setGameoverUI("computer"),n()):(t.classList.add("miss"),C.changeTurn(),x.changeTurnInformation("player")))}))};return{renderDOM:()=>{I.createUI(),document.getElementById("btn-rotate").addEventListener("click",(()=>{x.toggleShipDirection()})),document.getElementById("btn-reset").addEventListener("click",(()=>{x.clearBoard("init"),x.toggleStartButtonStatus("init"),E.handleDragDropEventListener()})),document.getElementById("btn-random").addEventListener("click",(()=>{x.clearBoard("init"),x.emptyShipDragContainer(),x.toggleStartButtonStatus("init"),C.resetGameboards(),C.generateShipRandomCoordinates("player"),x.addShipToBoard("init",C.getGameBoard("player"))})),document.getElementById("btn-start").addEventListener("click",(()=>{x.toggleUI(),C.generateShipRandomCoordinates("computer"),x.addShipToBoard("player",C.getGameBoard("player")),x.addShipToBoard("computer",C.getGameBoard("computer")),x.clearBoard("init")})),document.getElementById("btn-restart").addEventListener("click",(()=>{x.toggleUI(),x.setNewGameUI(),C.resetGameboards()})),document.querySelectorAll(".cell-computer-board").forEach((t=>{t.addEventListener("click",(t=>{if(C.isPlayerTurn()){const e=Number(t.target.getAttribute("data-x")),i=Number(t.target.getAttribute("data-y"));C.isCoordinateFree("computer",e,i)&&(C.isShipHit("computer",e,i)?(t.target.classList.add("hit"),C.isShipSunk("computer",e,i)&&x.markShipAreaToHit("computer",C.getGameBoard("computer")),C.isGameOver()&&x.setGameoverUI("player")):(t.target.classList.add("miss"),C.changeTurn(),x.changeTurnInformation("computer"),new Promise((n=>{setTimeout(n,500)})).then((()=>{n()}))))}}))})),E.handleDragDropEventListener()}}})().renderDOM()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,