(()=>{"use strict";var n={358:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(537),r=t.n(i),a=t(645),o=t.n(a)()(r());o.push([n.id,"/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n","",{version:3,sources:["webpack://./src/assets/reset.css"],names:[],mappings:"AAAA,sBAAsB;AACtB;;;CAGC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiFI,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,wBAAwB;AAC5B;AACA,gDAAgD;AAChD;;;;;;;;;;;IAWI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,gBAAgB;AACpB;AACA;;IAEI,YAAY;AAChB;AACA;;;;IAII,WAAW;IACX,aAAa;AACjB;AACA;IACI,yBAAyB;IACzB,iBAAiB;AACrB;AACA,sBAAsB",sourcesContent:["/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n"],sourceRoot:""}]);const s=o},774:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(537),r=t.n(i),a=t(645),o=t.n(a)()(r());o.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap);"]),o.push([n.id,":root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-restart-color: #1c1917;\n    --button-restart-color-hover: #44403c;\n    --target-cell-color: #34d399;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    align-items: flex-start;\n    gap: 4rem;\n}\n\n#init-board-container,\n#init-ship-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.ship-drag-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 19.4rem;\n    height: calc(18.5rem + 14px);\n    padding: 1rem;\n    gap: 1rem;\n    border: 2px solid black;\n    background-color: #e7e5e4;\n}\n\n.ship-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    position: relative;\n    left: -2px;\n    top: -2px;\n    z-index: 20;\n    border: 1px solid black;\n}\n\n.drag-container-horizontal {\n    flex-direction: column;\n}\n\n.drag-container-vertical {\n    flex-direction: row;\n}\n\n.ship-horizontal {\n    flex-direction: row;\n}\n\n.ship-vertical {\n    flex-direction: column;\n}\n\n.cell-ship {\n    border: 1px solid black;\n    cursor: move;\n    height: 2.5rem;\n    width: 2.5rem;\n    position: relative;\n    z-index: 20;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n    position: relative;\n    z-index: 1;\n}\n\n.cell-init-board {\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.target-cell {\n    border: 3px dashed var(--target-cell-color);\n}\n\n.cell-ship,\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n    position: relative;\n    z-index: 5;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-start,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-restart-color);\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-restart-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n","",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"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",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap');\n\n:root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-restart-color: #1c1917;\n    --button-restart-color-hover: #44403c;\n    --target-cell-color: #34d399;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    align-items: flex-start;\n    gap: 4rem;\n}\n\n#init-board-container,\n#init-ship-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n.ship-drag-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 19.4rem;\n    height: calc(18.5rem + 14px);\n    padding: 1rem;\n    gap: 1rem;\n    border: 2px solid black;\n    background-color: #e7e5e4;\n}\n\n.ship-container {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    position: relative;\n    left: -2px;\n    top: -2px;\n    z-index: 20;\n    border: 1px solid black;\n}\n\n.drag-container-horizontal {\n    flex-direction: column;\n}\n\n.drag-container-vertical {\n    flex-direction: row;\n}\n\n.ship-horizontal {\n    flex-direction: row;\n}\n\n.ship-vertical {\n    flex-direction: column;\n}\n\n.cell-ship {\n    border: 1px solid black;\n    cursor: move;\n    height: 2.5rem;\n    width: 2.5rem;\n    position: relative;\n    z-index: 20;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n    position: relative;\n    z-index: 1;\n}\n\n.cell-init-board {\n    justify-content: flex-start;\n    align-items: flex-start;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.target-cell {\n    border: 3px dashed var(--target-cell-color);\n}\n\n.cell-ship,\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n    position: relative;\n    z-index: 5;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-start,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-restart-color);\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-restart-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(o[c]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);i&&o[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},o=[],s=0;s<n.length;s++){var c=n[s],l=i.base?c[0]+i.base:c[0],d=a[l]||0,A="".concat(l," ").concat(d);a[l]=d+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,i);i.byIndex=s,e.splice(s,0,{identifier:A,updater:m,references:1})}o.push(A)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=i(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var s=t(a[o]);e[s].references--}for(var c=i(n,r),l=0;l<a.length;l++){var d=t(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),r=t.n(i),a=t(569),o=t.n(a),s=t(565),c=t.n(s),l=t(216),d=t.n(l),A=t(589),u=t.n(A),p=t(358),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=o().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var h=t(774),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=o().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=d(),e()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;const b=n=>{const e=n,t=[];return function(){for(let n=0;n<e;n++)t[n]=!1}(),{get length(){return e},get hitArray(){return t},hit:n=>{t[n]=!0},isSunk:()=>t.every((n=>!0===n))}},g=()=>{const n=[],e=10;!function(){for(let t=0;t<e;t++){n[t]=[];for(let i=0;i<e;i++){const e={isShip:!1,ship:{},shipIndex:null,isHit:!1,x:t,y:i,direction:""};n[t].push(e)}}}();const t=(t,i,r,a)=>{let o=!0;if("vertical"===r){const r=t-1,s=t+a.length;if(t>=0&&t<=e-a.length&&i>=0&&i<e){for(let e=0;e<a.length;e++)if(n[t+e][i].isShip){o=!1;break}if(r>=0&&s<e)if(n[r][i].isShip||n[s][i].isShip)o=!1;else for(let t=0;t<=a.length+1;t++){if(i-1>=0&&n[r+t][i-1].isShip){o=!1;break}if(i+1<e&&n[r+t][i+1].isShip){o=!1;break}}else if(-1===r)if(n[s][i].isShip)o=!1;else for(let t=0;t<a.length+1;t++){if(i-1>=0&&n[t][i-1].isShip){o=!1;break}if(i+1<e&&n[t][i+1].isShip){o=!1;break}}else if(s===e)if(n[r][i].isShip)o=!1;else for(let t=0;t<a.length+1;t++){if(i-1>=0&&n[r+t][i-1].isShip){o=!1;break}if(i+1<e&&n[r+t][i+1].isShip){o=!1;break}}}else o=!1}else if("horizontal"===r){const r=i-1,s=i+a.length;if(t>=0&&t<e&&i>=0&&i<=e-a.length){for(let e=0;e<a.length;e++)if(n[t][i+e].isShip){o=!1;break}if(r>=0&&s<e)if(n[t][r].isShip||n[t][s].isShip)o=!1;else for(let i=0;i<=a.length+1;i++){if(t-1>=0&&n[t-1][r+i].isShip){o=!1;break}if(t+1<e&&n[t+1][r+i].isShip){o=!1;break}}else if(-1===r)if(n[t][s].isShip)o=!1;else for(let i=0;i<a.length+1;i++){if(t-1>=0&&n[t-1][i].isShip){o=!1;break}if(t+1<e&&n[t+1][i].isShip){o=!1;break}}else if(s===e)if(n[t][r].isShip)o=!1;else for(let i=0;i<a.length+1;i++){if(t-1>=0&&n[t-1][r+i].isShip){o=!1;break}if(t+1<e&&n[t+1][r+i].isShip){o=!1;break}}}else o=!1}return o},i=(e,t,i)=>{for(let r=0;r<i.length;r++)n[e+r][t].isShip=!0,n[e+r][t].ship=i,n[e+r][t].shipIndex=r,n[e+r][t].direction="vertical"},r=(e,t,i)=>{for(let r=0;r<i.length;r++)n[e][t+r].isShip=!0,n[e][t+r].ship=i,n[e][t+r].shipIndex=r,n[e][t+r].direction="horizontal"};return{get board(){return n},resetBoard:()=>{for(let t=0;t<e;t++)for(let i=0;i<e;i++)n[t][i].isShip=!1,n[t][i].ship={},n[t][i].shipIndex=null,n[t][i].isHit=!1,n[t][i].direction=""},canPlaceShip:t,placeShipVertical:i,placeShipHorizontal:r,receiveAttack:(e,t)=>!0===n[e][t].isShip?(n[e][t].ship.hit(n[e][t].shipIndex),n[e][t].isHit=!0,!0):(n[e][t].isHit=!0,!1),setShipAreaToHit:(t,i)=>{const r=n[t][i].shipIndex,a=n[t][i].ship.length;if("vertical"===n[t][i].direction){const o=t-r-1,s=t+a-r;if(o>=0&&s<e){n[o][i].isHit=!0,n[s][i].isHit=!0;for(let t=0;t<=a+1;t++)i-1>=0&&(n[o+t][i-1].isHit=!0),i+1<e&&(n[o+t][i+1].isHit=!0)}if(o<0){n[s][i].isHit=!0;for(let t=0;t<a+1;t++)i-1>=0&&(n[t][i-1].isHit=!0),i+1<e&&(n[t][i+1].isHit=!0)}if(s>=e){n[o][i].isHit=!0;for(let t=0;t<a+1;t++)i-1>=0&&(n[o+t][i-1].isHit=!0),i+1<e&&(n[o+t][i+1].isHit=!0)}}if("horizontal"===n[t][i].direction){const o=i-r-1,s=i+a-r;if(o>=0&&s<e){n[t][o].isHit=!0,n[t][s].isHit=!0;for(let i=0;i<=a+1;i++)t-1>=0&&(n[t-1][o+i].isHit=!0),t+1<e&&(n[t+1][o+i].isHit=!0)}if(o<0){n[t][s].isHit=!0;for(let i=0;i<a+1;i++)t-1>=0&&(n[t-1][i].isHit=!0),t+1<e&&(n[t+1][i].isHit=!0)}if(s>=e){n[t][o].isHit=!0;for(let i=0;i<a+1;i++)t-1>=0&&(n[t-1][o+i].isHit=!0),t+1<e&&(n[t+1][o+i].isHit=!0)}}},isAllShipsSunk:()=>{const e=[];return n.forEach((n=>{n.forEach((n=>{n.isShip&&e.push(n.ship.isSunk())}))})),!e.some((n=>!1===n))},randomPlaceShip:n=>{const e=Math.random()<.5?"vertical":"horizontal";let a=!1;for(;!a;){const{x:o,y:s}={x:Math.floor(10*Math.random()),y:Math.floor(10*Math.random())};t(o,s,e,n)&&("vertical"===e?i(o,s,n):"horizontal"===e&&r(o,s,n),a=!0)}}}},v=()=>{let n=!0;return{get isMyTurn(){return n},changeTurn:()=>{n=!n},randomAttack:n=>{const e=[];n.board.forEach((n=>{n.forEach((n=>{n.isHit||e.push({x:n.x,y:n.y})}))}));const t=Math.floor(Math.random()*e.length);return e[t]}}},y=(()=>{const n=v(),e=v(),t=g(),i=g(),r=()=>{const n=[],e=b(5),t=b(4),i=b(3),r=b(3),a=b(2);return n.push(e,t,i,r,a),n};return{initGame:()=>{n.isMyTurn=!0,e.isMyTurn=!1},getGameBoard:n=>"player"===n?t.board:"computer"===n?i.board:void 0,resetGameboards:()=>{t.resetBoard(),i.resetBoard()},isPlayerTurn:()=>!!n.isMyTurn,changeTurn:()=>{n.changeTurn()},isCoordinateFree:(n,e,r)=>"player"===n?!t.board[e][r].isHit:"computer"===n?!i.board[e][r].isHit:void 0,isShipHit:(n,e,r)=>"player"===n?t.receiveAttack(e,r):"computer"===n?i.receiveAttack(e,r):void 0,isGameOver:()=>!(!t.isAllShipsSunk()&&!i.isAllShipsSunk()),computerRandomAttack:()=>e.randomAttack(t),generateShipRandomCoordinates:n=>{"player"===n&&r().forEach((n=>{t.randomPlaceShip(n)})),"computer"===n&&r().forEach((n=>{i.randomPlaceShip(n)}))},isShipSunk:(n,e,r)=>{if("player"===n){if(t.board[e][r].ship.isSunk())return t.setShipAreaToHit(e,r),!0}else if("computer"===n&&i.board[e][r].ship.isSunk())return i.setShipAreaToHit(e,r),!0}}})(),C=t.p+"7615be16eed41f806def.png",B=(()=>{const n=(n,e)=>{const t=document.createElement("div");t.id=n;for(let i=0;i<e;i++)for(let r=0;r<e;r++){const e=document.createElement("div");e.setAttribute("class",`cell-${n}`),e.setAttribute("data-x",`${i}`),e.setAttribute("data-y",`${r}`),t.appendChild(e)}return t},e=(n,e)=>{const t=document.createElement("div");t.setAttribute("id",`${n}`),t.setAttribute("class","ship-container ship-horizontal"),t.setAttribute("draggable",!0),t.setAttribute("data-width",`${e}`);for(let n=0;n<e;n++){const n=document.createElement("div");n.setAttribute("class","cell-ship"),t.appendChild(n)}return t},t=()=>{const t=document.createElement("div");return t.classList.add("content-init"),t.append((()=>{const n=document.createElement("div");return n.id="init-ship-container",n.append((()=>{const n=document.createElement("div");return n.setAttribute("class","ship-drag-container drag-container-horizontal"),n.append(e("carrier",5),e("battleship",4),e("destroyer",3),e("submarine",3),e("patrol",2)),n})(),(()=>{const n=document.createElement("button");return n.id="btn-rotate",n.textContent="Rotate",n})()),n})(),(()=>{const e=document.createElement("div");return e.id="init-board-container",e.append(n("init-board",10),(()=>{const n=document.createElement("div");return n.id="button-container",n.append((()=>{const n=document.createElement("button");return n.id="btn-reset",n.textContent="Reset",n})(),(()=>{const n=document.createElement("button");return n.id="btn-random",n.textContent="Random",n})(),(()=>{const n=document.createElement("button");return n.id="btn-start",n.textContent="Start",n})()),n})()),e})()),t},i=()=>{const e=document.createElement("main");return e.append((()=>{const e=document.createElement("div");return e.classList.add("content-game"),e.append(n("player-board",10),(()=>{const n=document.createElement("div");return n.id="middle-container",n.append((()=>{const n=document.createElement("div");return n.id="winner-info",n})(),(()=>{const n=document.createElement("div");return n.id="turn-info",n.textContent="Your turn",n})(),(()=>{const n=document.createElement("button");return n.id="btn-restart",n.classList.add("btn-restart-inactive"),n.textContent="Restart",n})()),n})(),n("computer-board",10)),e})(),t()),e};return{createUI:()=>{document.querySelector("body").append((()=>{const n=document.createElement("header"),e=document.createElement("h1");return e.textContent="BATTLESHIP",n.appendChild(e),n})(),i(),(()=>{const n=document.createElement("footer");return n.append((()=>{const n=document.createElement("p"),e=(new Date).getFullYear();return n.textContent=`Copyright Â© Laszlo Kis ${e}`,n})(),(()=>{const n=document.createElement("a");n.classList.add("reflink"),n.href="https://github.com/ev0clu",n.target="_blank";const e=document.createElement("img");return e.classList.add("github-img"),e.src=C,e.alt="Github logo",n.appendChild(e),n})()),n})()),document.querySelector(".content-game").classList.add("inactive")},resetShipContainer:()=>{const n=document.querySelector(".ship-drag-container");n.textContent="",n.classList.contains("drag-container-vertical")&&(n.classList.remove("drag-container-vertical"),n.classList.add("drag-container-horizontal")),n.append(e("carrier",5),e("battleship",4),e("destroyer",3),e("submarine",3),e("patrol",2))},resetInitBoard:()=>{const e=document.getElementById("init-board-container");e.removeChild(e.firstChild),e.insertBefore(n("init-board",10),e.firstChild)}}})(),I=B,x=(()=>{const n=n=>{document.getElementById("winner-info").textContent=n},e=()=>{document.getElementById("computer-board").classList.toggle("board-inactive")},t=()=>{document.getElementById("btn-restart").classList.toggle("btn-restart-inactive")},i=n=>{const e=document.getElementById("turn-info");e.textContent="","player"===n?e.textContent="Your Turn":"computer"===n?e.textContent="Computer Turn":"over"===n&&(e.textContent="Game Over")},r=n=>{if("init"===n&&(I.resetInitBoard(),I.resetShipContainer()),"game"===n){const n=document.querySelectorAll(".cell-player-board"),e=document.querySelectorAll(".cell-computer-board");n.forEach((n=>{n.classList.contains("ship")&&n.classList.remove("ship"),n.classList.contains("hit")&&n.classList.remove("hit"),n.classList.contains("miss")&&n.classList.remove("miss")})),e.forEach((n=>{n.classList.contains("ship")&&n.classList.remove("ship"),n.classList.contains("hit")&&n.classList.remove("hit"),n.classList.contains("miss")&&n.classList.remove("miss")}))}};return{toggleUI:()=>{const n=document.querySelector(".content-game"),e=document.querySelector(".content-init");n.classList.toggle("inactive"),e.classList.toggle("inactive")},addShipToBoard:(n,e)=>{const t=document.querySelectorAll(".cell-player-board"),i=document.querySelectorAll(".cell-computer-board"),r=document.querySelectorAll(".cell-init-board");let a="";"player"===n?a=t:"computer"===n?a=i:"init"===n&&(a=r),e.forEach((n=>{n.forEach((n=>{if(n.isShip)for(let e=0;e<a.length;e++)if(Number(a[e].getAttribute("data-x"))===n.x&&Number(a[e].getAttribute("data-y"))===n.y){a[e].classList.add("ship");break}}))}))},changeTurnInformation:i,setGameoverUI:r=>{i("over"),n("player"===r?"You won!":"Computer won!"),t(),e()},clearBoard:r,setNewGameUI:()=>{t(),e(),r(),i("player"),n("")},markShipAreaToHit:(n,e)=>{const t=document.querySelectorAll(".cell-player-board"),i=document.querySelectorAll(".cell-computer-board");let r="";"player"===n?r=t:"computer"===n&&(r=i),e.forEach((n=>{n.forEach((n=>{if(!n.isShip&&n.isHit)for(let e=0;e<r.length;e++)if(Number(r[e].getAttribute("data-x"))===n.x&&Number(r[e].getAttribute("data-y"))===n.y){r[e].classList.add("miss");break}}))}))},toggleShipDirection:()=>{const n=document.querySelector(".ship-drag-container");if(n.classList.contains("drag-container-horizontal")){n.classList.remove("drag-container-horizontal"),n.classList.add("drag-container-vertical");for(let e=0;e<n.childNodes.length;e++)n.children[e].classList.remove("ship-horizontal"),n.children[e].classList.add("ship-vertical")}else if(n.classList.contains("drag-container-vertical")){n.classList.remove("drag-container-vertical"),n.classList.add("drag-container-horizontal");for(let e=0;e<n.childNodes.length;e++)n.children[e].classList.remove("ship-vertical"),n.children[e].classList.add("ship-horizontal")}}}})(),S=(()=>{let n=null;const e=(n,e)=>{const t=Number(n.getAttribute("data-x")),i=Number(n.getAttribute("data-y")),r=Number(e.getAttribute("data-width"));if(e.classList.contains("ship-vertical"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${t+n}"][data-y="${i}"]`).classList.add("ship-active-vertical");else if(e.classList.contains("ship-horizontal"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i+n}"]`).classList.add("ship-active-horizontal")},t=(n,e)=>{const t=Number(n.getAttribute("data-x")),i=Number(n.getAttribute("data-y")),r=Number(e.getAttribute("data-width"));if(n.classList.contains("ship-active-vertical"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${t+n}"][data-y="${i}"]`).classList.remove("ship-active-vertical");else if(n.classList.contains("ship-active-horizontal"))for(let n=0;n<r;n++)document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i+n}"]`).classList.remove("ship-active-horizontal")},i=(n,e)=>{const t=Number(n.getAttribute("data-x")),i=Number(n.getAttribute("data-y")),r=Number(e.getAttribute("data-width"));let a="";const o=10;e.classList.contains("ship-horizontal")?a="horizontal":e.classList.contains("ship-vertical")&&(a="vertical");let s=!0;if("vertical"===a){const n=t-1,e=t+r;if(t>=0&&t<=o-r&&i>=0&&i<o){for(let n=0;n<r;n++){const e=document.querySelector(`.cell-init-board[data-x="${t+n}"][data-y="${i}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(n>=0&&e<o){const t=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i}"]`),a=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i}"]`);if(t.classList.contains("ship-active-vertical")||a.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")||a.classList.contains("ship-active-horizontal"))s=!1;else for(let e=0;e<=r+1;e++){if(i-1>=0){const t=document.querySelector(`.cell-init-board[data-x="${n+e}"][data-y="${i-1}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<o){const t=document.querySelector(`.cell-init-board[data-x="${n+e}"][data-y="${i+1}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(-1===n){const n=document.querySelector(`.cell-init-board[data-x="${e}"][data-y="${i}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<r+1;n++){if(i-1>=0){const e=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i-1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<o){const e=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i+1}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(e===o){const e=document.querySelector(`.cell-init-board[data-x="${n}"][data-y="${i}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal"))s=!1;else for(let e=0;e<r+1;e++){if(i-1>=0){const t=document.querySelector(`.cell-init-board[data-x="${n+e}"][data-y="${i-1}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}if(i+1<o){const t=document.querySelector(`.cell-init-board[data-x="${n+e}"][data-y="${i+1}"]`);if(t.classList.contains("ship-active-vertical")||t.classList.contains("ship-active-horizontal")){s=!1;break}}}}}else s=!1}else if("horizontal"===a){const n=i-1,e=i+r;if(t>=0&&t<o&&i>=0&&i<=o-r){for(let n=0;n<r;n++){const e=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${i+n}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(n>=0&&e<o){const i=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${n}"]`),a=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${e}"]`);if(i.classList.contains("ship-active-vertical")||a.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")||a.classList.contains("ship-active-horizontal"))s=!1;else for(let e=0;e<=r+1;e++){if(t-1>=0){const i=document.querySelector(`.cell-init-board[data-x="${t-1}"][data-y="${n+e}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}if(t+1<o){const i=document.querySelector(`.cell-init-board[data-x="${t+1}"][data-y="${n+e}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(-1===n){const n=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${e}"]`);if(n.classList.contains("ship-active-vertical")||n.classList.contains("ship-active-horizontal"))s=!1;else for(let n=0;n<r+1;n++){if(t-1>=0){const e=document.querySelector(`.cell-init-board[data-x="${t-1}"][data-y="${n}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}if(t+1<o){const e=document.querySelector(`.cell-init-board[data-x="${t+1}"][data-y="${n}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal")){s=!1;break}}}}else if(e===o){const e=document.querySelector(`.cell-init-board[data-x="${t}"][data-y="${n}"]`);if(e.classList.contains("ship-active-vertical")||e.classList.contains("ship-active-horizontal"))s=!1;else for(let e=0;e<r+1;e++){if(t-1>=0){const i=document.querySelector(`.cell-init-board[data-x="${t-1}"][data-y="${n+e}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}if(t+1<o){const i=document.querySelector(`.cell-init-board[data-x="${t+1}"][data-y="${n+e}"]`);if(i.classList.contains("ship-active-vertical")||i.classList.contains("ship-active-horizontal")){s=!1;break}}}}}else s=!1}return s};function r(e){this.style.opacity="0.4",this.parentNode.classList.contains("ship-drag-container")||t(this.parentNode,this),n=this,e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/plain",this.id)}function a(){this.style.opacity="1"}function o(n){return n.preventDefault(),!1}function s(){this.classList.add("target-cell")}function c(){this.classList.remove("target-cell")}function l(t){if(t.stopPropagation(),n!==this){this.classList.remove("target-cell");const n=t.dataTransfer.getData("text/plain"),r=document.getElementById(`${n}`);i(this,r)&&(this.appendChild(r),e(this,r))}return!1}return{handleDragDropEventListener:()=>{document.querySelectorAll(".ship-container").forEach((n=>{n.addEventListener("dragstart",r),n.addEventListener("dragend",a)})),document.querySelectorAll(".cell-init-board").forEach((n=>{n.addEventListener("dragover",o),n.addEventListener("dragenter",s),n.addEventListener("dragleave",c),n.addEventListener("drop",l)}))}}})(),E=S;(()=>{const n=()=>{const e=document.querySelectorAll(".cell-player-board"),t=y.computerRandomAttack();e.forEach((e=>{Number(e.getAttribute("data-x"))===t.x&&Number(e.getAttribute("data-y"))===t.y&&y.isCoordinateFree("player",t.x,t.y)&&(y.isShipHit("player",t.x,t.y)?(e.classList.add("hit"),y.isShipSunk("player",t.x,t.y)&&x.markShipAreaToHit("player",y.getGameBoard("player")),y.isGameOver()&&x.setGameoverUI("computer"),n()):(e.classList.add("miss"),y.changeTurn(),x.changeTurnInformation("player")))}))};return{renderDOM:()=>{I.createUI(),document.getElementById("btn-rotate").addEventListener("click",(()=>{x.toggleShipDirection()})),document.getElementById("btn-reset").addEventListener("click",(()=>{x.clearBoard("init"),E.handleDragDropEventListener()})),document.getElementById("btn-random").addEventListener("click",(()=>{x.clearBoard("init"),y.resetGameboards(),y.generateShipRandomCoordinates("player"),x.addShipToBoard("init",y.getGameBoard("player"))})),document.getElementById("btn-start").addEventListener("click",(()=>{x.toggleUI(),y.generateShipRandomCoordinates("computer"),x.addShipToBoard("player",y.getGameBoard("player")),x.addShipToBoard("computer",y.getGameBoard("computer")),x.clearBoard("init")})),document.getElementById("btn-restart").addEventListener("click",(()=>{x.toggleUI(),x.setNewGameUI(),x.clearBoard("game"),y.resetGameboards()})),document.querySelectorAll(".cell-computer-board").forEach((e=>{e.addEventListener("click",(e=>{if(y.isPlayerTurn()){const t=Number(e.target.getAttribute("data-x")),i=Number(e.target.getAttribute("data-y"));y.isCoordinateFree("computer",t,i)&&(y.isShipHit("computer",t,i)?(e.target.classList.add("hit"),y.isShipSunk("computer",t,i)&&x.markShipAreaToHit("computer",y.getGameBoard("computer")),y.isGameOver()&&x.setGameoverUI("player")):(e.target.classList.add("miss"),y.changeTurn(),x.changeTurnInformation("computer"),new Promise((n=>{setTimeout(n,500)})).then((()=>{n()}))))}}))})),E.handleDragDropEventListener()}}})().renderDOM()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,