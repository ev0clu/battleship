(()=>{"use strict";var n={358:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n","",{version:3,sources:["webpack://./src/assets/reset.css"],names:[],mappings:"AAAA,sBAAsB;AACtB;;;CAGC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiFI,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,wBAAwB;AAC5B;AACA,gDAAgD;AAChD;;;;;;;;;;;IAWI,cAAc;AAClB;AACA;IACI,cAAc;AAClB;AACA;;IAEI,gBAAgB;AACpB;AACA;;IAEI,YAAY;AAChB;AACA;;;;IAII,WAAW;IACX,aAAa;AACjB;AACA;IACI,yBAAyB;IACzB,iBAAiB;AACrB;AACA,sBAAsB",sourcesContent:["/* --- Reset CSS --- */\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: '';\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n/* --- Reset end --- */\n"],sourceRoot:""}]);const s=a},774:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap);"]),a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200);"]),a.push([n.id,":root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-restart-color: #1c1917;\n    --button-restart-color-hover: #44403c;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    gap: 4rem;\n}\n\n#ship-container,\n#ship-choosing-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#ship-choosing-container {\n    height: 15rem;\n    width: 10rem;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-start,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-restart-color);\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-restart-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\n.material-symbols-outlined:hover {\n    font-variation-settings: 'FILL' 0, 'wght' 700, 'GRAD' 0, 'opsz' 48;\n    cursor: pointer;\n}\n\n.material-symbols-outlined {\n    font-size: 2rem;\n    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n","",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"AAGA;IACI,qBAAqB;IACrB,gDAAgD;IAChD,sBAAsB;IACtB,qBAAqB;IACrB,qBAAqB;IACrB,oBAAoB;IACpB,+BAA+B;IAC/B,qCAAqC;AACzC;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI;2EACuE;IACvE,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,mCAAmC;AACvC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,OAAO;IACP,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;;IAGI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,SAAS;AACb;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;AAEA;;;IAGI;2EACuE;IACvE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,mCAAmC;AACvC;;AAEA;;;IAGI,aAAa;IACb,yCAAyC;IACzC,sCAAsC;IACtC,+BAA+B;IAC/B,oCAAoC;IACpC,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;;;;;IAKI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,cAAc;IACd,6CAA6C;IAC7C,kBAAkB;AACtB;;AAEA;;;;;IAKI,eAAe;IACf,mDAAmD;AACvD;;AAEA;;;;;IAKI,sCAAsC;AAC1C;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,kEAAkE;IAClE,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,kEAAkE;AACtE;;AAEA;IACI;eACW;IACX;sDACkD;IAClD,WAAW;IACX,cAAc;IACd,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA,kBAAkB;;AAElB;AACA;;AAEA;AACA",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto&family=Saira+Stencil+One&family=Nunito&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200');\n\n:root {\n    --body-color: #f5f5f4;\n    --board-shadow: rgba(0, 0, 0, 0.35) 2px 5px 15px;\n    --board-color: #fafaf9;\n    --ship-color: #0e7490;\n    --miss-color: #e0f2fe;\n    --hit-color: #ef4444;\n    --button-restart-color: #1c1917;\n    --button-restart-color-hover: #44403c;\n}\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Saira Stencil One', cursive, 'Segoe UI', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    min-height: 100vh;\n    /*min-width: 100vw;*/\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--body-color);\n}\n\nheader {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 0 1rem 0;\n}\n\nheader h1 {\n    font-size: 5rem;\n    letter-spacing: 0.2rem;\n}\n\nmain {\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.content-init,\n.content-game,\n#button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.content-init {\n    gap: 4rem;\n}\n\n#ship-container,\n#ship-choosing-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#ship-choosing-container {\n    height: 15rem;\n    width: 10rem;\n}\n\n.cell-player-board,\n.cell-computer-board,\n.cell-init-board {\n    font-family: 'Nunito', sans-serif, 'Segoe UI', 'Roboto', Helvetica, Arial, sans-serif,\n        'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 8rem;\n    border: 1px solid black;\n}\n\n.cell-computer-board {\n    cursor: crosshair;\n}\n\n.ship {\n    background-color: var(--ship-color);\n}\n\n#player-board,\n#computer-board,\n#init-board {\n    display: grid;\n    grid-template-columns: repeat(10, 2.5rem);\n    grid-template-rows: repeat(10, 2.5rem);\n    box-shadow: var(--board-shadow);\n    background-color: var(--board-color);\n    border: 1px solid black;\n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n}\n\n#turn-info,\n#winner-info {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n    width: 12rem;\n    font-size: 1.5rem;\n}\n\n.inactive {\n    display: none;\n}\n\n.btn-restart-inactive {\n    visibility: hidden;\n}\n\n.board-inactive {\n    pointer-events: none;\n}\n\n#btn-restart,\n#btn-reset,\n#btn-random,\n#btn-start,\n#btn-rotate {\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1.4rem;\n    font-weight: 600;\n    color: white;\n    width: 7rem;\n    height: 2.5rem;\n    background-color: var(--button-restart-color);\n    border-radius: 8px;\n}\n\n#btn-restart:hover,\n#btn-reset:hover,\n#btn-random:hover,\n#btn-start:hover,\n#btn-rotate:hover {\n    cursor: pointer;\n    background-color: var(--button-restart-color-hover);\n}\n\n#btn-restart:active,\n#btn-reset:active,\n#btn-random:active,\n#btn-start:active,\n#btn-rotate:active {\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n}\n\n.miss {\n    background-color: var(--miss-color);\n}\n\n.miss::after {\n    content: 'â€¢';\n    font-size: 2rem;\n    color: black;\n}\n\n.hit {\n    background-color: var(--hit-color);\n}\n\n.hit::after {\n    content: 'X';\n    font-weight: 700;\n    font-size: 2rem;\n    color: black;\n}\n\n.material-symbols-outlined:hover {\n    font-variation-settings: 'FILL' 0, 'wght' 700, 'GRAD' 0, 'opsz' 48;\n    cursor: pointer;\n}\n\n.material-symbols-outlined {\n    font-size: 2rem;\n    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 48;\n}\n\nfooter {\n    /*position: absolute;\n    bottom: 0;*/\n    font-family: 'Roboto', sans-serif, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', system-ui;\n    width: 100%;\n    height: 2.5rem;\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.reflink {\n    width: 25px;\n    text-align: center;\n}\n\n.github-img {\n    width: 20px;\n    height: 20px;\n}\n\n.github-img:hover {\n    width: 25px;\n    height: 25px;\n}\n\n/* MEDIA QUERIES */\n\n@media (max-width: 1200px) {\n}\n\n@media (max-width: 750px) {\n}\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var m=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var p=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var c=r(n,o),l=0;l<i.length;l++){var A=t(i[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),c=t.n(s),l=t(216),A=t.n(l),d=t(589),m=t.n(d),u=t(358),p={};p.styleTagTransform=m(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=A(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;var h=t(774),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=A(),e()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;const b=t.p+"7615be16eed41f806def.png",g=(()=>{const n=(n,e)=>{const t=document.createElement("div");t.id=n;for(let r=0;r<e;r++)for(let o=0;o<e;o++){const e=document.createElement("div");e.setAttribute("class",`cell-${n}`),e.setAttribute("data-x",`${r}`),e.setAttribute("data-y",`${o}`),t.appendChild(e)}return t},e=n=>{const e=document.getElementById("winner-info");return e.textContent=n,e},t=()=>{document.getElementById("computer-board").classList.toggle("board-inactive")},r=()=>{document.getElementById("btn-restart").classList.toggle("btn-restart-inactive")},o=()=>{const e=document.createElement("div");return e.classList.add("content-init"),e.append((()=>{const n=document.createElement("div");return n.id="ship-choosing-container",n.append((()=>{const n=document.createElement("div");return n.id="ship-container",n})(),(()=>{const n=document.createElement("button");return n.id="btn-rotate",n.textContent="Rotate",n})()),n})(),(()=>{const e=document.createElement("div");return e.id="ship-container",e.append(n("init-board",10),(()=>{const n=document.createElement("div");return n.id="button-container",n.append((()=>{const n=document.createElement("button");return n.id="btn-reset",n.textContent="Reset",n})(),(()=>{const n=document.createElement("button");return n.id="btn-random",n.textContent="Random",n})(),(()=>{const n=document.createElement("button");return n.id="btn-start",n.textContent="Start",n})()),n})()),e})()),e},i=()=>{const e=document.createElement("main");return e.append((()=>{const e=document.createElement("div");return e.classList.add("content-game"),e.append(n("player-board",10),(()=>{const n=document.createElement("div");return n.id="middle-container",n.append((()=>{const n=document.createElement("div");return n.id="winner-info",n})(),(()=>{const n=document.createElement("div");return n.id="turn-info",n.textContent="Your turn",n})(),(()=>{const n=document.createElement("button");return n.id="btn-restart",n.classList.add("btn-restart-inactive"),n.textContent="Restart",n})()),n})(),n("computer-board",10)),e})(),o()),e},a=n=>{const e=document.getElementById("turn-info");e.textContent="","player"===n?e.textContent="Your Turn":"computer"===n?e.textContent="Computer Turn":"over"===n&&(e.textContent="Game Over")},s=n=>{if("init"===n&&document.querySelectorAll(".cell-init-board").forEach((n=>{n.classList.contains("ship")&&n.classList.remove("ship"),n.classList.contains("hit")&&n.classList.remove("hit"),n.classList.contains("miss")&&n.classList.remove("miss")})),"game"===n){const n=document.querySelectorAll(".cell-player-board"),e=document.querySelectorAll(".cell-computer-board");n.forEach((n=>{n.classList.contains("ship")&&n.classList.remove("ship"),n.classList.contains("hit")&&n.classList.remove("hit"),n.classList.contains("miss")&&n.classList.remove("miss")})),e.forEach((n=>{n.classList.contains("ship")&&n.classList.remove("ship"),n.classList.contains("hit")&&n.classList.remove("hit"),n.classList.contains("miss")&&n.classList.remove("miss")}))}};return{createInitPage:()=>{document.querySelector("body").append((()=>{const n=document.createElement("header"),e=document.createElement("h1");return e.textContent="BATTLESHIP",n.appendChild(e),n})(),i(),(()=>{const n=document.createElement("footer");return n.append((()=>{const n=document.createElement("p"),e=(new Date).getFullYear();return n.textContent=`Copyright Â© Laszlo Kis ${e}`,n})(),(()=>{const n=document.createElement("a");n.classList.add("reflink"),n.href="https://github.com/ev0clu",n.target="_blank";const e=document.createElement("img");return e.classList.add("github-img"),e.src=b,e.alt="Github logo",n.appendChild(e),n})()),n})()),document.querySelector(".content-game").classList.add("inactive")},toggleUI:()=>{const n=document.querySelector(".content-game"),e=document.querySelector(".content-init");n.classList.toggle("inactive"),e.classList.toggle("inactive")},addShipToGameBoard:(n,e)=>{const t=document.querySelectorAll(".cell-player-board"),r=document.querySelectorAll(".cell-computer-board"),o=document.querySelectorAll(".cell-init-board");let i="";"player"===n?i=t:"computer"===n?i=r:"init"===n&&(i=o),e.forEach((n=>{n.forEach((n=>{if(n.isShip)for(let e=0;e<i.length;e++)if(Number(i[e].getAttribute("data-x"))===n.x&&Number(i[e].getAttribute("data-y"))===n.y){i[e].classList.add("ship");break}}))}))},changeTurnInformation:a,setGameoverUI:n=>{a("over"),e("player"===n?"You won!":"Computer won!"),r(),t()},clearBoard:s,setNewGameUI:()=>{r(),t(),s(),a("player"),e("")},markShipAround:(n,e)=>{const t=document.querySelectorAll(".cell-player-board"),r=document.querySelectorAll(".cell-computer-board");let o="";"player"===n?o=t:"computer"===n&&(o=r),e.forEach((n=>{n.forEach((n=>{if(!n.isShip&&n.isHit)for(let e=0;e<o.length;e++)if(Number(o[e].getAttribute("data-x"))===n.x&&Number(o[e].getAttribute("data-y"))===n.y){o[e].classList.add("miss");break}}))}))}}})(),C=n=>{const e=n,t=[];return function(){for(let n=0;n<e;n++)t[n]=!1}(),{get length(){return e},get hitArray(){return t},hit:n=>{t[n]=!0},isSunk:()=>t.every((n=>!0===n))}},I=()=>{const n=[],e=10;!function(){for(let t=0;t<e;t++){n[t]=[];for(let r=0;r<e;r++){const e={isShip:!1,ship:{},shipIndex:null,isHit:!1,x:t,y:r,direction:""};n[t].push(e)}}}();const t=(t,r,o,i)=>{let a=!0;if("vertical"===o){const o=t-1,s=t+i.length;if(t>=0&&t<=e-i.length&&r>=0&&r<e){for(let e=0;e<i.length;e++)if(n[t+e][r].isShip){a=!1;break}if(o>=0&&s<e)if(n[o][r].isShip||n[s][r].isShip)a=!1;else for(let t=0;t<=i.length+1;t++){if(r-1>=0&&n[o+t][r-1].isShip){a=!1;break}if(r+1<e&&n[o+t][r+1].isShip){a=!1;break}}else if(-1===o)if(n[s][r].isShip)a=!1;else for(let t=0;t<i.length+1;t++){if(r-1>=0&&n[t][r-1].isShip){a=!1;break}if(r+1<e&&n[t][r+1].isShip){a=!1;break}}else if(s===e)if(n[o][r].isShip)a=!1;else for(let t=0;t<i.length+1;t++){if(r-1>=0&&n[o+t][r-1].isShip){a=!1;break}if(r+1<e&&n[o+t][r+1].isShip){a=!1;break}}}else a=!1}else if("horizontal"===o){const o=r-1,s=r+i.length;if(t>=0&&t<e&&r>=0&&r<=e-i.length){for(let e=0;e<i.length;e++)if(n[t][r+e].isShip){a=!1;break}if(o>=0&&s<e)if(n[t][o].isShip||n[t][s].isShip)a=!1;else for(let r=0;r<=i.length+1;r++){if(t-1>=0&&n[t-1][o+r].isShip){a=!1;break}if(t+1<e&&n[t+1][o+r].isShip){a=!1;break}}else if(-1===o)if(n[t][s].isShip)a=!1;else for(let r=0;r<i.length+1;r++){if(t-1>=0&&n[t-1][r].isShip){a=!1;break}if(t+1<e&&n[t+1][r].isShip){a=!1;break}}else if(s===e)if(n[t][o].isShip)a=!1;else for(let r=0;r<i.length+1;r++){if(t-1>=0&&n[t-1][o+r].isShip){a=!1;break}if(t+1<e&&n[t+1][o+r].isShip){a=!1;break}}}else a=!1}return a},r=(e,t,r)=>{for(let o=0;o<r.length;o++)n[e+o][t].isShip=!0,n[e+o][t].ship=r,n[e+o][t].shipIndex=o,n[e+o][t].direction="vertical"},o=(e,t,r)=>{for(let o=0;o<r.length;o++)n[e][t+o].isShip=!0,n[e][t+o].ship=r,n[e][t+o].shipIndex=o,n[e][t+o].direction="horizontal"};return{get board(){return n},resetBoard:()=>{for(let t=0;t<e;t++)for(let r=0;r<e;r++)n[t][r].isShip=!1,n[t][r].ship={},n[t][r].shipIndex=null,n[t][r].isHit=!1,n[t][r].direction=""},canPlaceShip:t,placeShipVertical:r,placeShipHorizontal:o,receiveAttack:(e,t)=>!0===n[e][t].isShip?(n[e][t].ship.hit(n[e][t].shipIndex),n[e][t].isHit=!0,!0):(n[e][t].isHit=!0,!1),shipSunk:(t,r)=>{const o=n[t][r].shipIndex,i=n[t][r].ship.length;if("vertical"===n[t][r].direction){const a=t-o-1,s=t+i-o;if(a>=0&&s<e){n[a][r].isHit=!0,n[s][r].isHit=!0;for(let t=0;t<=i+1;t++)r-1>=0&&(n[a+t][r-1].isHit=!0),r+1<e&&(n[a+t][r+1].isHit=!0)}if(a<0){n[s][r].isHit=!0;for(let t=0;t<i+1;t++)r-1>=0&&(n[t][r-1].isHit=!0),r+1<e&&(n[t][r+1].isHit=!0)}if(s>=e){n[a][r].isHit=!0;for(let t=0;t<i+1;t++)r-1>=0&&(n[a+t][r-1].isHit=!0),r+1<e&&(n[a+t][r+1].isHit=!0)}}if("horizontal"===n[t][r].direction){const a=r-o-1,s=r+i-o;if(a>=0&&s<e){n[t][a].isHit=!0,n[t][s].isHit=!0;for(let r=0;r<=i+1;r++)t-1>=0&&(n[t-1][a+r].isHit=!0),t+1<e&&(n[t+1][a+r].isHit=!0)}if(a<0){n[t][s].isHit=!0;for(let r=0;r<i+1;r++)t-1>=0&&(n[t-1][r].isHit=!0),t+1<e&&(n[t+1][r].isHit=!0)}if(s>=e){n[t][a].isHit=!0;for(let r=0;r<i+1;r++)t-1>=0&&(n[t-1][a+r].isHit=!0),t+1<e&&(n[t+1][a+r].isHit=!0)}}},isAllShipsSunk:()=>{const e=[];return n.forEach((n=>{n.forEach((n=>{n.isShip&&e.push(n.ship.isSunk())}))})),!e.some((n=>!1===n))},randomPlaceShip:n=>{const e=Math.random()<.5?"vertical":"horizontal";let i=!1;for(;!i;){const{x:a,y:s}={x:Math.floor(10*Math.random()),y:Math.floor(10*Math.random())};t(a,s,e,n)&&("vertical"===e?r(a,s,n):"horizontal"===e&&o(a,s,n),i=!0)}}}},y=()=>{let n=!0;return{get isMyTurn(){return n},changeTurn:()=>{n=!n},randomAttack:n=>{const e=[];n.board.forEach((n=>{n.forEach((n=>{n.isHit||e.push({x:n.x,y:n.y})}))}));const t=Math.floor(Math.random()*e.length);return e[t]}}},v=(()=>{const n=y(),e=y(),t=I(),r=I(),o=()=>{const n=[],e=C(5),t=C(4),r=C(3),o=C(3),i=C(2);return n.push(e,t,r,o,i),n};return{initGame:()=>{n.isMyTurn=!0,e.isMyTurn=!1},getGameBoard:n=>"player"===n?t.board:"computer"===n?r.board:void 0,resetGameboards:()=>{t.resetBoard(),r.resetBoard()},isPlayerTurn:()=>!!n.isMyTurn,changeTurn:()=>{n.changeTurn()},isCoordinateFree:(n,e,o)=>"player"===n?!t.board[e][o].isHit:"computer"===n?!r.board[e][o].isHit:void 0,isShipHit:(n,e,o)=>"player"===n?t.receiveAttack(e,o):r.receiveAttack(e,o),isGameOver:()=>!(!t.isAllShipsSunk()&&!r.isAllShipsSunk()),computerRandomAttack:()=>e.randomAttack(t),generateShipRandomCoordinates:n=>{"player"===n&&o().forEach((n=>{t.randomPlaceShip(n)})),"computer"===n&&o().forEach((n=>{r.randomPlaceShip(n)}))},isShipSunk:(n,e,o)=>{if("player"===n){if(t.board[e][o].ship.isSunk())return t.shipSunk(e,o),!0}else if("computer"===n&&r.board[e][o].ship.isSunk())return r.shipSunk(e,o),!0}}})();(()=>{const n=()=>{const e=document.querySelectorAll(".cell-player-board"),t=v.computerRandomAttack();e.forEach((e=>{Number(e.getAttribute("data-x"))===t.x&&Number(e.getAttribute("data-y"))===t.y&&v.isCoordinateFree("player",t.x,t.y)&&(v.isShipHit("player",t.x,t.y)?(e.classList.add("hit"),v.isShipSunk("player",t.x,t.y)&&g.markShipAround("player",v.getGameBoard("player")),v.isGameOver()&&g.setGameoverUI("computer"),n()):(e.classList.add("miss"),v.changeTurn(),g.changeTurnInformation("player")))}))};return{renderInitPage:()=>{g.createInitPage(),document.getElementById("btn-reset").addEventListener("click",(()=>{g.clearBoard("init"),v.resetGameboards()})),document.getElementById("btn-random").addEventListener("click",(()=>{g.clearBoard("init"),v.resetGameboards(),v.generateShipRandomCoordinates("player"),g.addShipToGameBoard("init",v.getGameBoard("player"))})),document.getElementById("btn-start").addEventListener("click",(()=>{g.toggleUI(),v.generateShipRandomCoordinates("computer"),g.addShipToGameBoard("player",v.getGameBoard("player")),g.addShipToGameBoard("computer",v.getGameBoard("computer")),g.clearBoard("init")})),document.getElementById("btn-restart").addEventListener("click",(()=>{g.toggleUI(),g.setNewGameUI(),g.clearBoard("game"),v.resetGameboards()})),document.querySelectorAll(".cell-computer-board").forEach((e=>{e.addEventListener("click",(e=>{if(v.isPlayerTurn()){const t=Number(e.target.getAttribute("data-x")),r=Number(e.target.getAttribute("data-y"));v.isCoordinateFree("computer",t,r)&&(v.isShipHit("computer",t,r)?(e.target.classList.add("hit"),v.isShipSunk("computer",t,r)&&g.markShipAround("computer",v.getGameBoard("computer")),v.isGameOver()&&g.setGameoverUI("player")):(e.target.classList.add("miss"),v.changeTurn(),g.changeTurnInformation("computer"),new Promise((n=>{setTimeout(n,500)})).then((()=>{n()}))))}}))}))}}})().renderInitPage()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,